{
  "transaction": {
    "hash": "0xe64ccdf121865de689f18eb33a87834ff0174511772d2b6a04e1bc2c9bfb2bd4",
    "block_hash": "",
    "block_number": 17941865,
    "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
    "gas": 30000000,
    "gas_price": 0,
    "gas_fee_cap": 0,
    "gas_tip_cap": 0,
    "cumulative_gas_used": 0,
    "gas_used": 159577,
    "effective_gas_price": 0,
    "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000002b",
    "nonce": 0,
    "to": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
    "index": 0,
    "value": "0x",
    "access_list": null,
    "status": true,
    "addresses": [
      "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
      "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
      "0x53a328F4086d7C0F1Fa19e594c9b842125263026",
      "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
      "0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41",
      "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
    ],
    "contract_ids": [
      "eth:1:0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "eth:1:0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
      "eth:1:0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e"
    ],
    "network_id": "1",
    "timestamp": "2023-08-18T13:07:35Z",
    "function_selector": "",
    "l1_block_number": 0,
    "l1_timestamp": 0,
    "deposit_tx": false,
    "system_tx": false,
    "sig": {
      "v": "0x0",
      "r": "0x0",
      "s": "0x0"
    },
    "transaction_info": {
      "contract_id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "block_number": 17941767,
      "transaction_id": "0xe64ccdf121865de689f18eb33a87834ff0174511772d2b6a04e1bc2c9bfb2bd4",
      "contract_address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "method": "execute",
      "parameters": null,
      "intrinsic_gas": 21204,
      "refund_gas": 4800,
      "call_trace": {
        "hash": "0xe64ccdf121865de689f18eb33a87834ff0174511772d2b6a04e1bc2c9bfb2bd4",
        "contract_name": "GovernorBravoDelegator",
        "function_name": "execute",
        "function_pc": 63,
        "function_op": "JUMPDEST",
        "function_file_index": 0,
        "function_code_start": 101,
        "function_line_number": 6,
        "function_code_length": 2797,
        "absolute_position": 33,
        "caller_pc": 0,
        "caller_op": "CALL",
        "call_type": "CALL",
        "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
        "from_balance": "1",
        "to": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
        "to_balance": "9000000000000000",
        "value": "0",
        "caller": {
          "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
          "balance": "1"
        },
        "block_timestamp": "0001-01-01T00:00:00Z",
        "gas": 29978796,
        "gas_used": 143173,
        "intrinsic_gas": 21204,
        "refund_gas": 4800,
        "event_references": null,
        "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000002b",
        "decoded_input": [
          {
            "soltype": {
              "name": "proposalId",
              "type": "uint256",
              "storage_location": "default",
              "components": null,
              "offset": 0,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "indexed": false,
              "simple_type": {
                "type": "uint"
              }
            },
            "value": "43"
          }
        ],
        "nonce_diff": [
          {
            "address": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
            "original": "0",
            "dirty": "1"
          }
        ],
        "state_diff": [
          {
            "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
            "soltype": {
              "name": "queuedTransactions",
              "type": "mapping (bytes32 => bool)",
              "storage_location": "storage",
              "components": null,
              "offset": 0,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
              "indexed": false
            },
            "original": {
              "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295": true
            },
            "dirty": {
              "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295": false
            },
            "raw": [
              {
                "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                "key": "0x92f03df768b1863908f02ce1dd4918cb306d8f801c994add2c35d3cce36407c1",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000001",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000000"
              }
            ]
          },
          {
            "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
            "soltype": {
              "name": "proposals",
              "type": "mapping (uint256 => tuple)",
              "storage_location": "memory",
              "components": [
                {
                  "name": "id",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "proposer",
                  "type": "address",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
                  "indexed": false,
                  "simple_type": {
                    "type": "address"
                  }
                },
                {
                  "name": "eta",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "targets",
                  "type": "address[]",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
                  "indexed": false,
                  "simple_type": {
                    "type": "slice",
                    "nested_type": {
                      "type": "address"
                    }
                  }
                },
                {
                  "name": "values",
                  "type": "uint256[]",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
                  "indexed": false,
                  "simple_type": {
                    "type": "slice",
                    "nested_type": {
                      "type": "uint"
                    }
                  }
                },
                {
                  "name": "signatures",
                  "type": "string[]",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
                  "indexed": false,
                  "simple_type": {
                    "type": "slice",
                    "nested_type": {
                      "type": "string"
                    }
                  }
                },
                {
                  "name": "calldatas",
                  "type": "bytes[]",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
                  "indexed": false,
                  "simple_type": {
                    "type": "slice",
                    "nested_type": {
                      "type": "bytes"
                    }
                  }
                },
                {
                  "name": "startBlock",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "endBlock",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "forVotes",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "againstVotes",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "abstainVotes",
                  "type": "uint256",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                {
                  "name": "canceled",
                  "type": "bool",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 0,
                  "index": "0x000000000000000000000000000000000000000000000000000000000000000c",
                  "indexed": false,
                  "simple_type": {
                    "type": "bool"
                  }
                },
                {
                  "name": "executed",
                  "type": "bool",
                  "storage_location": "memory",
                  "components": null,
                  "offset": 8,
                  "index": "0x000000000000000000000000000000000000000000000000000000000000000c",
                  "indexed": false,
                  "simple_type": {
                    "type": "bool"
                  }
                },
                {
                  "name": "receipts",
                  "type": "mapping (address => tuple)",
                  "storage_location": "memory",
                  "components": [
                    {
                      "name": "hasVoted",
                      "type": "bool",
                      "storage_location": "memory",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "bool"
                      }
                    },
                    {
                      "name": "support",
                      "type": "uint8",
                      "storage_location": "memory",
                      "components": null,
                      "offset": 8,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    {
                      "name": "votes",
                      "type": "uint96",
                      "storage_location": "memory",
                      "components": null,
                      "offset": 16,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    }
                  ],
                  "offset": 0,
                  "index": "0x000000000000000000000000000000000000000000000000000000000000000d",
                  "indexed": false
                }
              ],
              "offset": 0,
              "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
              "indexed": false
            },
            "original": {
              "\"43\"": {
                "id": null,
                "proposer": "0x0000000000000000000000000000000000000000",
                "eta": null,
                "targets": null,
                "values": null,
                "signatures": null,
                "calldatas": null,
                "startBlock": null,
                "endBlock": null,
                "forVotes": null,
                "againstVotes": null,
                "abstainVotes": null,
                "canceled": false,
                "executed": false,
                "receipts": null
              }
            },
            "dirty": {
              "\"43\"": {
                "id": null,
                "proposer": "0x0000000000000000000000000000000000000000",
                "eta": null,
                "targets": null,
                "values": null,
                "signatures": null,
                "calldatas": null,
                "startBlock": null,
                "endBlock": null,
                "forVotes": null,
                "againstVotes": null,
                "abstainVotes": null,
                "canceled": false,
                "executed": true,
                "receipts": null
              }
            },
            "raw": [
              {
                "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
              },
              {
                "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
              },
              {
                "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
              },
              {
                "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
              }
            ]
          },
          {
            "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
            "soltype": null,
            "original": null,
            "dirty": null,
            "raw": [
              {
                "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                "key": "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e288",
                "original": "0x3078663765343662323333616264316564616164386462626264613132313239",
                "dirty": "0x3078663546343439363231394633314344434261363133304235343032383733"
              }
            ]
          },
          {
            "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
            "soltype": null,
            "original": null,
            "dirty": null,
            "raw": [
              {
                "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                "key": "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e289",
                "original": "0x623937623037313032352c203078416645323038613331314232316631334546",
                "dirty": "0x363234353835363135612c203078663765343662323333616264316564616164"
              }
            ]
          },
          {
            "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
            "soltype": null,
            "original": null,
            "dirty": null,
            "raw": [
              {
                "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                "key": "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e28a",
                "original": "0x3837453333413930303439664331374137616344456300000000000000000000",
                "dirty": "0x3864626262646131323132396239376230373130323500000000000000000000"
              }
            ]
          }
        ],
        "logs": [
          {
            "name": "",
            "anonymous": false,
            "inputs": null,
            "raw": {
              "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
              "topics": [
                "0xd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a7550",
                "0x0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12",
                "0xddab7880052d68dbea6bd75e53a8101aece36ca84da8841c8fa62a4c0146beee"
              ],
              "data": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000053432323230000000000000000000000000000000000000000000000000000000"
            },
            "trace_index": null
          },
          {
            "name": "ExecuteTransaction",
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "name": "txHash",
                  "type": "bytes32",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "simple_type": {
                    "type": "bytes"
                  }
                },
                "value": "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295"
              },
              {
                "soltype": {
                  "name": "target",
                  "type": "address",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": true,
                  "simple_type": {
                    "type": "address"
                  }
                },
                "value": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41"
              },
              {
                "soltype": {
                  "name": "value",
                  "type": "uint256",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                "value": "0"
              },
              {
                "soltype": {
                  "name": "signature",
                  "type": "string",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "string"
                  }
                },
                "value": ""
              },
              {
                "soltype": {
                  "name": "data",
                  "type": "bytes",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "bytes"
                  }
                },
                "value": "0x10f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c2030786637653436623233336162643165646161643864626262646131323132396239376230373130323500000000000000000000"
              },
              {
                "soltype": {
                  "name": "eta",
                  "type": "uint256",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                "value": "1692364055"
              }
            ],
            "raw": {
              "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
              "topics": [
                "0xa560e3198060a2f10670c1ec5b403077ea6ae93ca8de1c32b451dc1a943cd6e7",
                "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295",
                "0x0000000000000000000000004976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41"
              ],
              "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000064df6d170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012410f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c203078663765343662323333616264316564616164386462626264613132313239623937623037313032350000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            "trace_index": null
          },
          {
            "name": "ProposalExecuted",
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "name": "id",
                  "type": "uint256",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                "value": "43"
              }
            ],
            "raw": {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "topics": [
                "0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f"
              ],
              "data": "0x000000000000000000000000000000000000000000000000000000000000002b"
            },
            "trace_index": null
          }
        ],
        "output": "0x",
        "decoded_output": null,
        "network_id": "1",
        "calls": [
          {
            "hash": "",
            "contract_name": "GovernorBravoDelegator",
            "function_name": "execute",
            "function_pc": 7606,
            "function_op": "JUMPDEST",
            "function_file_index": 0,
            "function_code_start": 7302,
            "function_line_number": 141,
            "function_code_length": 567,
            "absolute_position": 4219,
            "caller_pc": 107,
            "caller_op": "DELEGATECALL",
            "caller_file_index": 0,
            "caller_line_number": 68,
            "caller_code_start": 2559,
            "caller_code_length": 37,
            "call_type": "DELEGATECALL",
            "from": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
            "from_balance": "9000000000000000",
            "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
            "to_balance": "0",
            "value": null,
            "caller": {
              "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
              "balance": "1"
            },
            "block_timestamp": "0001-01-01T00:00:00Z",
            "gas": 29505335,
            "gas_used": 137953,
            "refund_gas": 468338,
            "event_references": {
              "NumberOfEvents": 1,
              "event_indices": null
            },
            "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000002b",
            "decoded_input": [
              {
                "soltype": {
                  "name": "proposalId",
                  "type": "uint256",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                "value": "43"
              }
            ],
            "output": "0x",
            "decoded_output": null,
            "network_id": "",
            "calls": [
              {
                "hash": "",
                "contract_name": "GovernorBravoDelegate",
                "function_name": "state",
                "function_pc": 3592,
                "function_op": "JUMPDEST",
                "function_file_index": 0,
                "function_code_start": 9778,
                "function_line_number": 194,
                "function_code_length": 1039,
                "function_variables": [
                  {
                    "soltype": {
                      "name": "proposal",
                      "type": "tuple",
                      "storage_location": "memory",
                      "components": [
                        {
                          "name": "id",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "proposer",
                          "type": "address",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "address"
                          }
                        },
                        {
                          "name": "eta",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "targets",
                          "type": "address[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "address"
                            }
                          }
                        },
                        {
                          "name": "values",
                          "type": "uint256[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "uint"
                            }
                          }
                        },
                        {
                          "name": "signatures",
                          "type": "string[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "name": "calldatas",
                          "type": "bytes[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "bytes"
                            }
                          }
                        },
                        {
                          "name": "startBlock",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "endBlock",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "forVotes",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "againstVotes",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "abstainVotes",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "canceled",
                          "type": "bool",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "bool"
                          }
                        },
                        {
                          "name": "executed",
                          "type": "bool",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "bool"
                          }
                        },
                        {
                          "name": "receipts",
                          "type": "mapping (address => tuple)",
                          "storage_location": "memory",
                          "components": [
                            {
                              "name": "hasVoted",
                              "type": "bool",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bool"
                              }
                            },
                            {
                              "name": "support",
                              "type": "uint8",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "votes",
                              "type": "uint96",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            }
                          ],
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false
                        }
                      ],
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false
                    },
                    "value": null
                  }
                ],
                "absolute_position": 242,
                "caller_pc": 7616,
                "caller_op": "JUMP",
                "caller_file_index": 0,
                "caller_line_number": 142,
                "caller_code_start": 7371,
                "caller_code_length": 17,
                "call_type": "JUMPDEST",
                "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                "from_balance": null,
                "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                "to_balance": null,
                "value": null,
                "caller": {
                  "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
                  "balance": "1"
                },
                "block_timestamp": "0001-01-01T00:00:00Z",
                "gas": 29504866,
                "gas_used": 23045,
                "event_references": null,
                "input": "0x",
                "decoded_input": [
                  {
                    "soltype": {
                      "name": "proposalId",
                      "type": "uint256",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    "value": "43"
                  }
                ],
                "output": "0x",
                "decoded_output": [
                  {
                    "soltype": {
                      "name": "",
                      "type": "uint256",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    "value": "5"
                  }
                ],
                "network_id": "",
                "calls": [
                  {
                    "hash": "",
                    "contract_name": "GovernorBravoDelegate",
                    "function_pc": 0,
                    "function_op": "STOP",
                    "absolute_position": 457,
                    "caller_pc": 3898,
                    "caller_op": "STATICCALL",
                    "caller_file_index": 0,
                    "caller_line_number": 209,
                    "caller_code_start": 10674,
                    "caller_code_length": 23,
                    "caller_variables": [
                      {
                        "soltype": {
                          "name": "proposal",
                          "type": "tuple",
                          "storage_location": "memory",
                          "components": [
                            {
                              "name": "id",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "proposer",
                              "type": "address",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "address"
                              }
                            },
                            {
                              "name": "eta",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "targets",
                              "type": "address[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "address"
                                }
                              }
                            },
                            {
                              "name": "values",
                              "type": "uint256[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "uint"
                                }
                              }
                            },
                            {
                              "name": "signatures",
                              "type": "string[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "name": "calldatas",
                              "type": "bytes[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "bytes"
                                }
                              }
                            },
                            {
                              "name": "startBlock",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "endBlock",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "forVotes",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "againstVotes",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "abstainVotes",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "canceled",
                              "type": "bool",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bool"
                              }
                            },
                            {
                              "name": "executed",
                              "type": "bool",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bool"
                              }
                            },
                            {
                              "name": "receipts",
                              "type": "mapping (address => tuple)",
                              "storage_location": "memory",
                              "components": [
                                {
                                  "name": "hasVoted",
                                  "type": "bool",
                                  "storage_location": "memory",
                                  "components": null,
                                  "offset": 0,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "simple_type": {
                                    "type": "bool"
                                  }
                                },
                                {
                                  "name": "support",
                                  "type": "uint8",
                                  "storage_location": "memory",
                                  "components": null,
                                  "offset": 0,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "simple_type": {
                                    "type": "uint"
                                  }
                                },
                                {
                                  "name": "votes",
                                  "type": "uint96",
                                  "storage_location": "memory",
                                  "components": null,
                                  "offset": 0,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "simple_type": {
                                    "type": "uint"
                                  }
                                }
                              ],
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false
                            }
                          ],
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false
                        },
                        "value": null
                      }
                    ],
                    "call_type": "STATICCALL",
                    "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                    "from_balance": "0",
                    "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "to_balance": "1660629381536117",
                    "value": null,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 29021785,
                    "gas_used": 220,
                    "refund_gas": 460663,
                    "event_references": null,
                    "input": "0xc1a287e2",
                    "output": "0x0000000000000000000000000000000000000000000000000000000000127500",
                    "decoded_output": [
                      {
                        "soltype": {
                          "name": "",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1209600"
                      }
                    ],
                    "network_id": "",
                    "calls": null
                  },
                  {
                    "hash": "",
                    "contract_name": "GovernorBravoDelegate",
                    "function_name": "add256",
                    "function_pc": 8549,
                    "function_op": "JUMPDEST",
                    "function_file_index": 0,
                    "function_code_start": 18041,
                    "function_line_number": 371,
                    "function_code_length": 162,
                    "absolute_position": 547,
                    "caller_pc": 3955,
                    "caller_op": "JUMP",
                    "caller_file_index": 0,
                    "caller_line_number": 209,
                    "caller_code_start": 10653,
                    "caller_code_length": 45,
                    "call_type": "JUMPDEST",
                    "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                    "from_balance": null,
                    "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                    "to_balance": null,
                    "value": null,
                    "caller": {
                      "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
                      "balance": "1"
                    },
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 29481927,
                    "gas_used": 59,
                    "event_references": null,
                    "input": "0x",
                    "decoded_input": [
                      {
                        "soltype": {
                          "name": "a",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1692364055"
                      },
                      {
                        "soltype": {
                          "name": "b",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1209600"
                      }
                    ],
                    "output": "0x",
                    "decoded_output": [
                      {
                        "soltype": {
                          "name": "",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1693573655"
                      }
                    ],
                    "network_id": "",
                    "calls": null
                  }
                ]
              },
              {
                "hash": "",
                "contract_name": "GovernorBravoDelegate",
                "function_name": "executeTransaction",
                "function_pc": 1740,
                "function_op": "JUMPDEST",
                "function_file_index": 0,
                "function_code_start": 9656,
                "function_line_number": 267,
                "function_code_length": 1291,
                "absolute_position": 3955,
                "caller_pc": 7932,
                "caller_op": "CALL",
                "caller_file_index": 0,
                "caller_line_number": 146,
                "caller_code_start": 7654,
                "caller_code_length": 155,
                "call_type": "CALL",
                "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                "from_balance": "0",
                "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                "to_balance": "1660629381536117",
                "value": "0",
                "caller": {
                  "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                  "balance": "9000000000000000"
                },
                "block_timestamp": "0001-01-01T00:00:00Z",
                "gas": 28961037,
                "gas_used": 51388,
                "refund_gas": 459699,
                "event_references": {
                  "NumberOfEvents": 1,
                  "event_indices": null
                },
                "input": "0x0825f38f0000000000000000000000004976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000064df6d1700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012410f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c203078663765343662323333616264316564616164386462626264613132313239623937623037313032350000000000000000000000000000000000000000000000000000000000000000000000000000",
                "decoded_input": [
                  {
                    "soltype": {
                      "name": "target",
                      "type": "address",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "address"
                      }
                    },
                    "value": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41"
                  },
                  {
                    "soltype": {
                      "name": "value",
                      "type": "uint256",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    "value": "0"
                  },
                  {
                    "soltype": {
                      "name": "signature",
                      "type": "string",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "string"
                      }
                    },
                    "value": ""
                  },
                  {
                    "soltype": {
                      "name": "data",
                      "type": "bytes",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "bytes"
                      }
                    },
                    "value": "0x10f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c2030786637653436623233336162643165646161643864626262646131323132396239376230373130323500000000000000000000"
                  },
                  {
                    "soltype": {
                      "name": "eta",
                      "type": "uint256",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    "value": "1692364055"
                  }
                ],
                "output": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
                "decoded_output": [
                  {
                    "soltype": {
                      "name": "",
                      "type": "bytes",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "bytes"
                      }
                    },
                    "value": "0x"
                  }
                ],
                "network_id": "",
                "calls": [
                  {
                    "hash": "",
                    "contract_name": "Timelock",
                    "function_name": "getBlockTimestamp",
                    "function_pc": 5927,
                    "function_op": "JUMPDEST",
                    "function_file_index": 0,
                    "function_code_start": 10953,
                    "function_line_number": 294,
                    "function_code_length": 159,
                    "absolute_position": 1931,
                    "caller_pc": 2310,
                    "caller_op": "JUMP",
                    "caller_file_index": 0,
                    "caller_line_number": 272,
                    "caller_code_start": 10116,
                    "caller_code_length": 19,
                    "call_type": "JUMPDEST",
                    "from": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "from_balance": null,
                    "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "to_balance": null,
                    "value": null,
                    "caller": {
                      "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                      "balance": "9000000000000000"
                    },
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 28954322,
                    "gas_used": 14,
                    "event_references": null,
                    "input": "0x",
                    "output": "0x",
                    "decoded_output": [
                      {
                        "soltype": {
                          "name": "",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1692364055"
                      }
                    ],
                    "network_id": "",
                    "calls": null
                  },
                  {
                    "hash": "",
                    "contract_name": "Timelock",
                    "function_name": "add",
                    "function_pc": 5931,
                    "function_op": "JUMPDEST",
                    "function_file_index": 0,
                    "function_code_start": 1026,
                    "function_line_number": 32,
                    "function_code_length": 176,
                    "absolute_position": 1948,
                    "caller_pc": 2416,
                    "caller_op": "JUMP",
                    "caller_file_index": 0,
                    "caller_line_number": 273,
                    "caller_code_start": 10257,
                    "caller_code_length": 21,
                    "call_type": "JUMPDEST",
                    "from": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "from_balance": null,
                    "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "to_balance": null,
                    "value": null,
                    "caller": {
                      "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                      "balance": "9000000000000000"
                    },
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 28954261,
                    "gas_used": 59,
                    "event_references": null,
                    "input": "0x",
                    "decoded_input": [
                      {
                        "soltype": {
                          "name": "a",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1692364055"
                      },
                      {
                        "soltype": {
                          "name": "b",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1209600"
                      }
                    ],
                    "output": "0x",
                    "decoded_output": [
                      {
                        "soltype": {
                          "name": "",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1693573655"
                      }
                    ],
                    "network_id": "",
                    "calls": null
                  },
                  {
                    "hash": "",
                    "contract_name": "Timelock",
                    "function_name": "getBlockTimestamp",
                    "function_pc": 5927,
                    "function_op": "JUMPDEST",
                    "function_file_index": 0,
                    "function_code_start": 10953,
                    "function_line_number": 294,
                    "function_code_length": 159,
                    "absolute_position": 1970,
                    "caller_pc": 2424,
                    "caller_op": "JUMP",
                    "caller_file_index": 0,
                    "caller_line_number": 273,
                    "caller_code_start": 10234,
                    "caller_code_length": 19,
                    "call_type": "JUMPDEST",
                    "from": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "from_balance": null,
                    "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "to_balance": null,
                    "value": null,
                    "caller": {
                      "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                      "balance": "9000000000000000"
                    },
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 28954187,
                    "gas_used": 14,
                    "event_references": null,
                    "input": "0x",
                    "output": "0x",
                    "decoded_output": [
                      {
                        "soltype": {
                          "name": "",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1692364055"
                      }
                    ],
                    "network_id": "",
                    "calls": null
                  },
                  {
                    "hash": "",
                    "contract_name": "Timelock",
                    "function_name": "setText",
                    "function_pc": 1938,
                    "function_op": "JUMPDEST",
                    "function_file_index": 0,
                    "function_code_start": 47619,
                    "function_line_number": 1352,
                    "function_code_length": 184,
                    "absolute_position": 3497,
                    "caller_pc": 2949,
                    "caller_op": "CALL",
                    "caller_file_index": 0,
                    "caller_line_number": 286,
                    "caller_code_start": 10708,
                    "caller_code_length": 34,
                    "call_type": "CALL",
                    "from": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "from_balance": "1660629381536117",
                    "to": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                    "to_balance": "0",
                    "value": "0",
                    "caller": {
                      "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                      "balance": "1660629381536117"
                    },
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 28495124,
                    "gas_used": 30650,
                    "refund_gas": 452303,
                    "event_references": {
                      "NumberOfEvents": 1,
                      "event_indices": null
                    },
                    "input": "0x10f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c2030786637653436623233336162643165646161643864626262646131323132396239376230373130323500000000000000000000",
                    "decoded_input": [
                      {
                        "soltype": {
                          "name": "node",
                          "type": "bytes32",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "bytes"
                          }
                        },
                        "value": "0x0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12"
                      },
                      {
                        "soltype": {
                          "name": "key",
                          "type": "string",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "string"
                          }
                        },
                        "value": "42220"
                      },
                      {
                        "soltype": {
                          "name": "value",
                          "type": "string",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "string"
                          }
                        },
                        "value": "0xf5F4496219F31CDCBa6130B5402873624585615a, 0xf7e46b233abd1edaad8dbbbda12129b97b071025"
                      }
                    ],
                    "output": "0x",
                    "decoded_output": null,
                    "network_id": "",
                    "calls": [
                      {
                        "hash": "",
                        "contract_name": "PublicResolver",
                        "function_name": "isAuthorised",
                        "function_pc": 6631,
                        "function_op": "JUMPDEST",
                        "function_file_index": 0,
                        "function_code_start": 50142,
                        "function_line_number": 1424,
                        "function_code_length": 191,
                        "function_variables": [
                          {
                            "soltype": {
                              "name": "owner",
                              "type": "address",
                              "storage_location": "default",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "address"
                              }
                            },
                            "value": "0x1a9c8182c09f50c8318d769245bea52c32be35bc"
                          }
                        ],
                        "absolute_position": 2564,
                        "caller_pc": 1947,
                        "caller_op": "JUMP",
                        "caller_file_index": 0,
                        "caller_line_number": 44,
                        "caller_code_start": 1469,
                        "caller_code_length": 18,
                        "call_type": "JUMPDEST",
                        "from": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                        "from_balance": null,
                        "to": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                        "to_balance": null,
                        "value": null,
                        "caller": {
                          "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                          "balance": "1660629381536117"
                        },
                        "block_timestamp": "0001-01-01T00:00:00Z",
                        "gas": 28494167,
                        "gas_used": 8491,
                        "event_references": null,
                        "input": "0x",
                        "decoded_input": [
                          {
                            "soltype": {
                              "name": "node",
                              "type": "bytes32",
                              "storage_location": "default",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bytes"
                              }
                            },
                            "value": "0x0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12"
                          }
                        ],
                        "output": "0x",
                        "decoded_output": [
                          {
                            "soltype": {
                              "name": "",
                              "type": "bool",
                              "storage_location": "default",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bool"
                              }
                            },
                            "value": true
                          }
                        ],
                        "network_id": "",
                        "calls": [
                          {
                            "hash": "",
                            "contract_name": "PublicResolver",
                            "function_name": "owner",
                            "function_pc": 4447,
                            "function_op": "JUMPDEST",
                            "function_file_index": 1,
                            "function_code_start": 3940,
                            "function_line_number": 117,
                            "function_code_length": 212,
                            "absolute_position": 2861,
                            "caller_pc": 6752,
                            "caller_op": "STATICCALL",
                            "caller_file_index": 0,
                            "caller_line_number": 1425,
                            "caller_code_start": 50232,
                            "caller_code_length": 15,
                            "call_type": "STATICCALL",
                            "from": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                            "from_balance": "0",
                            "to": "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
                            "to_balance": "0",
                            "value": null,
                            "caller": {
                              "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                              "balance": "0"
                            },
                            "block_timestamp": "0001-01-01T00:00:00Z",
                            "gas": 28043923,
                            "gas_used": 2951,
                            "refund_gas": 445141,
                            "event_references": null,
                            "input": "0x02571be30b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12",
                            "decoded_input": [
                              {
                                "soltype": {
                                  "name": "node",
                                  "type": "bytes32",
                                  "storage_location": "default",
                                  "components": null,
                                  "offset": 0,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "simple_type": {
                                    "type": "bytes"
                                  }
                                },
                                "value": "0x0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12"
                              }
                            ],
                            "output": "0x0000000000000000000000001a9c8182c09f50c8318d769245bea52c32be35bc",
                            "decoded_output": [
                              {
                                "soltype": {
                                  "name": "",
                                  "type": "address",
                                  "storage_location": "default",
                                  "components": null,
                                  "offset": 0,
                                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                  "indexed": false,
                                  "simple_type": {
                                    "type": "address"
                                  }
                                },
                                "value": "0x1a9c8182c09f50c8318d769245bea52c32be35bc"
                              }
                            ],
                            "network_id": "",
                            "calls": [
                              {
                                "hash": "",
                                "contract_name": "ENSRegistryWithFallback",
                                "function_name": "recordExists",
                                "function_pc": 4274,
                                "function_op": "JUMPDEST",
                                "function_file_index": 1,
                                "function_code_start": 4868,
                                "function_line_number": 149,
                                "function_code_length": 122,
                                "absolute_position": 2730,
                                "caller_pc": 1689,
                                "caller_op": "JUMP",
                                "caller_file_index": 2,
                                "caller_line_number": 40,
                                "caller_code_start": 917,
                                "caller_code_length": 18,
                                "call_type": "JUMPDEST",
                                "from": "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
                                "from_balance": null,
                                "to": "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
                                "to_balance": null,
                                "value": null,
                                "caller": {
                                  "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
                                  "balance": "0"
                                },
                                "block_timestamp": "0001-01-01T00:00:00Z",
                                "gas": 28043663,
                                "gas_used": 2269,
                                "event_references": null,
                                "input": "0x",
                                "decoded_input": [
                                  {
                                    "soltype": {
                                      "name": "node",
                                      "type": "bytes32",
                                      "storage_location": "default",
                                      "components": null,
                                      "offset": 0,
                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                      "indexed": false,
                                      "simple_type": {
                                        "type": "bytes"
                                      }
                                    },
                                    "value": "0x0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12"
                                  }
                                ],
                                "output": "0x",
                                "decoded_output": [
                                  {
                                    "soltype": {
                                      "name": "",
                                      "type": "bool",
                                      "storage_location": "default",
                                      "components": null,
                                      "offset": 0,
                                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                                      "indexed": false,
                                      "simple_type": {
                                        "type": "bool"
                                      }
                                    },
                                    "value": true
                                  }
                                ],
                                "network_id": "",
                                "calls": null
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "stack_trace": null,
      "logs": [
        {
          "name": "",
          "anonymous": false,
          "inputs": null,
          "raw": {
            "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
            "topics": [
              "0xd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a7550",
              "0x0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12",
              "0xddab7880052d68dbea6bd75e53a8101aece36ca84da8841c8fa62a4c0146beee"
            ],
            "data": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000053432323230000000000000000000000000000000000000000000000000000000"
          },
          "trace_index": null
        },
        {
          "name": "ExecuteTransaction",
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              "value": "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295"
            },
            {
              "soltype": {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              "value": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41"
            },
            {
              "soltype": {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              "value": "0"
            },
            {
              "soltype": {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              "value": ""
            },
            {
              "soltype": {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              "value": "0x10f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c2030786637653436623233336162643165646161643864626262646131323132396239376230373130323500000000000000000000"
            },
            {
              "soltype": {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              "value": "1692364055"
            }
          ],
          "raw": {
            "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
            "topics": [
              "0xa560e3198060a2f10670c1ec5b403077ea6ae93ca8de1c32b451dc1a943cd6e7",
              "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295",
              "0x0000000000000000000000004976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41"
            ],
            "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000064df6d170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012410f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c203078663765343662323333616264316564616164386462626264613132313239623937623037313032350000000000000000000000000000000000000000000000000000000000000000000000000000"
          },
          "trace_index": null
        },
        {
          "name": "ProposalExecuted",
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              "value": "43"
            }
          ],
          "raw": {
            "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
            "topics": [
              "0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f"
            ],
            "data": "0x000000000000000000000000000000000000000000000000000000000000002b"
          },
          "trace_index": null
        }
      ],
      "balance_diff": null,
      "nonce_diff": [
        {
          "address": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
          "original": "0",
          "dirty": "1"
        }
      ],
      "state_diff": [
        {
          "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
          "soltype": {
            "name": "queuedTransactions",
            "type": "mapping (bytes32 => bool)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false
          },
          "original": {
            "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295": true
          },
          "dirty": {
            "0x5670dd801eed5011f7c6f470afe90830be528cfd7248ce861910446b52b1c295": false
          },
          "raw": [
            {
              "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
              "key": "0x92f03df768b1863908f02ce1dd4918cb306d8f801c994add2c35d3cce36407c1",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000001",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000000"
            }
          ]
        },
        {
          "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
          "soltype": {
            "name": "proposals",
            "type": "mapping (uint256 => tuple)",
            "storage_location": "memory",
            "components": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000c",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 8,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000c",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "receipts",
                "type": "mapping (address => tuple)",
                "storage_location": "memory",
                "components": [
                  {
                    "name": "hasVoted",
                    "type": "bool",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "bool"
                    }
                  },
                  {
                    "name": "support",
                    "type": "uint8",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 8,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  },
                  {
                    "name": "votes",
                    "type": "uint96",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 16,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  }
                ],
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000d",
                "indexed": false
              }
            ],
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
            "indexed": false
          },
          "original": {
            "\"43\"": {
              "id": null,
              "proposer": "0x0000000000000000000000000000000000000000",
              "eta": null,
              "targets": null,
              "values": null,
              "signatures": null,
              "calldatas": null,
              "startBlock": null,
              "endBlock": null,
              "forVotes": null,
              "againstVotes": null,
              "abstainVotes": null,
              "canceled": false,
              "executed": false,
              "receipts": null
            }
          },
          "dirty": {
            "\"43\"": {
              "id": null,
              "proposer": "0x0000000000000000000000000000000000000000",
              "eta": null,
              "targets": null,
              "values": null,
              "signatures": null,
              "calldatas": null,
              "startBlock": null,
              "endBlock": null,
              "forVotes": null,
              "againstVotes": null,
              "abstainVotes": null,
              "canceled": false,
              "executed": true,
              "receipts": null
            }
          },
          "raw": [
            {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
            },
            {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
            },
            {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
            },
            {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "key": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
            }
          ]
        },
        {
          "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
          "soltype": null,
          "original": null,
          "dirty": null,
          "raw": [
            {
              "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
              "key": "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e288",
              "original": "0x3078663765343662323333616264316564616164386462626264613132313239",
              "dirty": "0x3078663546343439363231394633314344434261363133304235343032383733"
            }
          ]
        },
        {
          "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
          "soltype": null,
          "original": null,
          "dirty": null,
          "raw": [
            {
              "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
              "key": "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e289",
              "original": "0x623937623037313032352c203078416645323038613331314232316631334546",
              "dirty": "0x363234353835363135612c203078663765343662323333616264316564616164"
            }
          ]
        },
        {
          "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
          "soltype": null,
          "original": null,
          "dirty": null,
          "raw": [
            {
              "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
              "key": "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e28a",
              "original": "0x3837453333413930303439664331374137616344456300000000000000000000",
              "dirty": "0x3864626262646131323132396239376230373130323500000000000000000000"
            }
          ]
        }
      ],
      "raw_state_diff": null,
      "console_logs": null,
      "asset_changes": null,
      "balance_changes": [],
      "created_at": "2023-08-18T13:07:35Z"
    },
    "method": "",
    "decoded_input": null,
    "call_trace": [
      {
        "call_type": "CALL",
        "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
        "to": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
        "gas": 29978796,
        "gas_used": 143173,
        "subtraces": 1,
        "type": "CALL",
        "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000002b",
        "fromBalance": "0x01",
        "toBalance": "0x1ff973cafa8000"
      },
      {
        "call_type": "DELEGATECALL",
        "from": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
        "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
        "gas": 29505335,
        "gas_used": 137953,
        "subtraces": 2,
        "trace_address": [
          0
        ],
        "type": "CALL",
        "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000002b",
        "outOff": 128,
        "gas_in": 29976273,
        "gas_cost": 29507935,
        "fromBalance": "0x1ff973cafa8000"
      },
      {
        "call_type": "STATICCALL",
        "from": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
        "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
        "gas": 29021785,
        "gas_used": 220,
        "trace_address": [
          0,
          0
        ],
        "type": "CALL",
        "input": "0xc1a287e2",
        "output": "0x0000000000000000000000000000000000000000000000000000000000127500",
        "outOff": 128,
        "outLen": 32,
        "gas_in": 29482548,
        "gas_cost": 29021885,
        "fromBalance": "0x1ff973cafa8000",
        "toBalance": "0x05e6556863d975"
      },
      {
        "call_type": "CALL",
        "from": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
        "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
        "gas": 28961037,
        "gas_used": 51388,
        "subtraces": 1,
        "trace_address": [
          0,
          1
        ],
        "type": "CALL",
        "input": "0x0825f38f0000000000000000000000004976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000064df6d1700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012410f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c203078663765343662323333616264316564616164386462626264613132313239623937623037313032350000000000000000000000000000000000000000000000000000000000000000000000000000",
        "output": "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
        "outOff": 160,
        "gas_in": 29420836,
        "gas_cost": 28961137,
        "fromBalance": "0x1ff973cafa8000",
        "toBalance": "0x05e6556863d975"
      },
      {
        "call_type": "CALL",
        "from": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
        "to": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
        "gas": 28495124,
        "gas_used": 30650,
        "subtraces": 1,
        "trace_address": [
          0,
          1,
          0
        ],
        "type": "CALL",
        "input": "0x10f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005343232323000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563078663546343439363231394633314344434261363133304235343032383733363234353835363135612c2030786637653436623233336162643165646161643864626262646131323132396239376230373130323500000000000000000000",
        "outOff": 1088,
        "gas_in": 28950027,
        "gas_cost": 28497724,
        "fromBalance": "0x05e6556863d975"
      },
      {
        "call_type": "STATICCALL",
        "from": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
        "to": "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
        "gas": 28043923,
        "gas_used": 2951,
        "trace_address": [
          0,
          1,
          0,
          0
        ],
        "type": "CALL",
        "input": "0x02571be30b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9bc2b55f12",
        "output": "0x0000000000000000000000001a9c8182c09f50c8318d769245bea52c32be35bc",
        "outOff": 128,
        "outLen": 32,
        "gas_in": 28489164,
        "gas_cost": 28044023
      }
    ]
  },
  "simulation": {
    "id": "7feab7ae-181b-4336-ab13-ebb2c1e25cb8",
    "project_id": "59dc3425-7758-43e4-a17c-829981a895d1",
    "owner_id": "dd3a74be-9bc0-4d7a-9d5c-66c0c3bbef0f",
    "network_id": "1",
    "block_number": 17941865,
    "transaction_index": 0,
    "from": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
    "to": "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
    "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000002b",
    "gas": 30000000,
    "gas_price": "0",
    "gas_used": 159577,
    "value": "0",
    "method": "execute",
    "status": true,
    "access_list": null,
    "queue_origin": "",
    "block_header": {
      "number": "0x111c507",
      "hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "stateRoot": "0x220e9d940677c4f467e0508df4fe3b77bdace88995693f7e7e9e6baed305e87e",
      "parentHash": "0x5a665b2d5bbbecabf7a97db331c3fcb24088baa286e76e6e1e3210f92e96c29d",
      "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      "transactionsRoot": "0xd80eac207101fde5d4ef9fa40f18f510b17419cfab6ba30e96c4fa65d3a9e183",
      "receiptsRoot": "0xe2578fba2086b766bc484c7dcb531792e9d72354936614b551216bcd563f61d5",
      "logsBloom": "0x1e3551414049905854282a89e85e1488800b386ae48320d8762d0002822708029269012d40390613200837317811016a6321bc94896262fa97045a48827aa500d2c1685f48ac4b28a990c02e420422ed46910028c1fabcc00142e869c2ae02403a2a45368b8c042ba0c0022008021ae808450ce08d591f5227d00b3d204da0a0714204620244ed99947004c129040006396c1d2361c10439110a64c235b306f9c21f694485e160032348e08604ec8c708c9024a8186be30300c5a29e49c06862cc030c0b582408c086842482007d86d1558025061e6f52bac0c923270222244abc18b00e0b4e9303132582d068440826cdac1922395b00422464d9242005be41",
      "timestamp": "0x64df6d17",
      "difficulty": "0x0",
      "gasLimit": "0x1c9c380",
      "gasUsed": "0xbac951",
      "miner": "0x1f9090aae28b8a3dceadf281b0f12828e676c326",
      "extraData": "0x7273796e632d6275696c6465722e78797a",
      "mixHash": "0xea9e8a6ae9b9ea5d6ceb1db2d31837a8b6289541e4bad5ae36913f5779b0937d",
      "nonce": "0x0000000000000000",
      "baseFeePerGas": "0x6ca0f8ec7",
      "size": "0x0",
      "totalDifficulty": "0x0",
      "uncles": null,
      "transactions": null
    },
    "state_overrides": {
      "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": {
        "storage": {
          "0x92f03df768b1863908f02ce1dd4918cb306d8f801c994add2c35d3cce36407c1": "0x0000000000000000000000000000000000000000000000000000000000000001"
        }
      },
      "0x408ED6354d4973f66138C91495F2f2FCbd8724C3": {
        "storage": {
          "0x0000000000000000000000000000000000000000000000000000000000000007": "0x000000000000000000000000000000000000000000000000000000000000002b",
          "0x27c3ef9de67ffa23958f3ac8120600800af4ceb37a8b0ab15bf1866f1e6186f8": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf34": "0x10f13a8c0b9638d2c5bd4528d603562a1fa1e734fe1b88e680f448d779531e9b",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf35": "0xc2b55f1200000000000000000000000000000000000000000000000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf36": "0x0000006000000000000000000000000000000000000000000000000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf37": "0x000000a000000000000000000000000000000000000000000000000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf38": "0x0000000534323232300000000000000000000000000000000000000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf39": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3a": "0x0000005630786635463434393632313946333143444342613631333042353430",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3b": "0x32383733363234353835363135612c2030786637653436623233336162643165",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3c": "0x6461616438646262626461313231323962393762303731303235000000000000",
          "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3d": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x44cc7e5fd86667e6238d94c3335b7fc783ea62bdca2c161cc616decf273ea351": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x54c4447c3feb299ac190a51963a268f7c88a9dd6eecf90a7829047b062ffd412": "0x0000000000000000000000004976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b512": "0x000000000000000000000000000000000000000000000000000000000000002b",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b513": "0x000000000000000000000000d73a92be73efbfcf3854433a5fcbabf9c1316073",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b514": "0x0000000000000000000000000000000000000000000000000000000064df6d17",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b515": "0x0000000000000000000000000000000000000000000000000000000000000001",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b516": "0x0000000000000000000000000000000000000000000000000000000000000001",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b517": "0x0000000000000000000000000000000000000000000000000000000000000001",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b518": "0x0000000000000000000000000000000000000000000000000000000000000001",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b519": "0x000000000000000000000000000000000000000000000000000000000111c505",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51a": "0x000000000000000000000000000000000000000000000000000000000111c506",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51b": "0x0000000000000000000000000000000000000000033b2e3c9fd0803ce8000000",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51c": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51d": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xce9226c02fb21c47f5a6206abac377c7847cab2e74c43c760ae85e7b5452cfdd": "0x0000000000000000000000000000000000000000000000000000000000000249"
        }
      },
      "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073": {
        "balance": "0"
      }
    },
    "deposit_tx": false,
    "system_tx": false,
    "nonce": 0,
    "addresses": [
      "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
      "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e"
    ],
    "contract_ids": [
      "eth:1:0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "eth:1:0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
      "eth:1:0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e"
    ],
    "shared": false,
    "created_at": "2023-08-18T13:08:09.570683696Z"
  },
  "contracts": [
    {
      "id": "eth:1:0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
      "contract_id": "eth:1:0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verification_date": null,
      "address": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      "contract_name": "ENSRegistryWithFallback",
      "ens_domain": null,
      "type": "contract",
      "evm_version": "default",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": false,
      "optimization_runs": 200,
      "libraries": null,
      "data": {
        "main_contract": 2,
        "contract_info": [
          {
            "id": 1,
            "path": "@ensdomains/ens/contracts/ENSRegistry.sol",
            "name": "ENSRegistry.sol",
            "source": "pragma solidity ^0.5.0;\n\nimport \"./ENS.sol\";\n\n/**\n * The ENS registry contract.\n */\ncontract ENSRegistry is ENS {\n\n    struct Record {\n        address owner;\n        address resolver;\n        uint64 ttl;\n    }\n\n    mapping (bytes32 => Record) records;\n    mapping (address => mapping(address => bool)) operators;\n\n    // Permits modifications only by the owner of the specified node.\n    modifier authorised(bytes32 node) {\n        address owner = records[node].owner;\n        require(owner == msg.sender || operators[owner][msg.sender]);\n        _;\n    }\n\n    /**\n     * @dev Constructs a new ENS registrar.\n     */\n    constructor() public {\n        records[0x0].owner = msg.sender;\n    }\n\n    /**\n     * @dev Sets the record for a node.\n     * @param node The node to update.\n     * @param owner The address of the new owner.\n     * @param resolver The address of the resolver.\n     * @param ttl The TTL in seconds.\n     */\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl) external {\n        setOwner(node, owner);\n        _setResolverAndTTL(node, resolver, ttl);\n    }\n\n    /**\n     * @dev Sets the record for a subnode.\n     * @param node The parent node.\n     * @param label The hash of the label specifying the subnode.\n     * @param owner The address of the new owner.\n     * @param resolver The address of the resolver.\n     * @param ttl The TTL in seconds.\n     */\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external {\n        bytes32 subnode = setSubnodeOwner(node, label, owner);\n        _setResolverAndTTL(subnode, resolver, ttl);\n    }\n\n    /**\n     * @dev Transfers ownership of a node to a new address. May only be called by the current owner of the node.\n     * @param node The node to transfer ownership of.\n     * @param owner The address of the new owner.\n     */\n    function setOwner(bytes32 node, address owner) public authorised(node) {\n        _setOwner(node, owner);\n        emit Transfer(node, owner);\n    }\n\n    /**\n     * @dev Transfers ownership of a subnode keccak256(node, label) to a new address. May only be called by the owner of the parent node.\n     * @param node The parent node.\n     * @param label The hash of the label specifying the subnode.\n     * @param owner The address of the new owner.\n     */\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) public authorised(node) returns(bytes32) {\n        bytes32 subnode = keccak256(abi.encodePacked(node, label));\n        _setOwner(subnode, owner);\n        emit NewOwner(node, label, owner);\n        return subnode;\n    }\n\n    /**\n     * @dev Sets the resolver address for the specified node.\n     * @param node The node to update.\n     * @param resolver The address of the resolver.\n     */\n    function setResolver(bytes32 node, address resolver) public authorised(node) {\n        emit NewResolver(node, resolver);\n        records[node].resolver = resolver;\n    }\n\n    /**\n     * @dev Sets the TTL for the specified node.\n     * @param node The node to update.\n     * @param ttl The TTL in seconds.\n     */\n    function setTTL(bytes32 node, uint64 ttl) public authorised(node) {\n        emit NewTTL(node, ttl);\n        records[node].ttl = ttl;\n    }\n\n    /**\n     * @dev Enable or disable approval for a third party (\"operator\") to manage\n     *  all of `msg.sender`'s ENS records. Emits the ApprovalForAll event.\n     * @param operator Address to add to the set of authorized operators.\n     * @param approved True if the operator is approved, false to revoke approval.\n     */\n    function setApprovalForAll(address operator, bool approved) external {\n        operators[msg.sender][operator] = approved;\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /**\n     * @dev Returns the address that owns the specified node.\n     * @param node The specified node.\n     * @return address of the owner.\n     */\n    function owner(bytes32 node) public view returns (address) {\n        address addr = records[node].owner;\n        if (addr == address(this)) {\n            return address(0x0);\n        }\n\n        return addr;\n    }\n\n    /**\n     * @dev Returns the address of the resolver for the specified node.\n     * @param node The specified node.\n     * @return address of the resolver.\n     */\n    function resolver(bytes32 node) public view returns (address) {\n        return records[node].resolver;\n    }\n\n    /**\n     * @dev Returns the TTL of a node, and any records associated with it.\n     * @param node The specified node.\n     * @return ttl of the node.\n     */\n    function ttl(bytes32 node) public view returns (uint64) {\n        return records[node].ttl;\n    }\n\n    /**\n     * @dev Returns whether a record has been imported to the registry.\n     * @param node The specified node.\n     * @return Bool if record exists\n     */\n    function recordExists(bytes32 node) public view returns (bool) {\n        return records[node].owner != address(0x0);\n    }\n\n    /**\n     * @dev Query if an address is an authorized operator for another address.\n     * @param owner The address that owns the records.\n     * @param operator The address that acts on behalf of the owner.\n     * @return True if `operator` is an approved operator for `owner`, false otherwise.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool) {\n        return operators[owner][operator];\n    }\n\n    function _setOwner(bytes32 node, address owner) internal {\n        records[node].owner = owner;\n    }\n\n    function _setResolverAndTTL(bytes32 node, address resolver, uint64 ttl) internal {\n        if(resolver != records[node].resolver) {\n            records[node].resolver = resolver;\n            emit NewResolver(node, resolver);\n        }\n\n        if(ttl != records[node].ttl) {\n            records[node].ttl = ttl;\n            emit NewTTL(node, ttl);\n        }\n    }\n}\n"
          },
          {
            "id": 2,
            "path": "@ensdomains/ens/contracts/ENSRegistryWithFallback.sol",
            "name": "ENSRegistryWithFallback.sol",
            "source": "pragma solidity ^0.5.0;\n\nimport \"./ENS.sol\";\nimport \"./ENSRegistry.sol\";\n\n\n/**\n * The ENS registry contract.\n */\ncontract ENSRegistryWithFallback is ENSRegistry {\n\n    ENS public old;\n\n    /**\n     * @dev Constructs a new ENS registrar.\n     */\n    constructor(ENS _old) public ENSRegistry() {\n        old = _old;\n    }\n\n    /**\n     * @dev Returns the address of the resolver for the specified node.\n     * @param node The specified node.\n     * @return address of the resolver.\n     */\n    function resolver(bytes32 node) public view returns (address) {\n        if (!recordExists(node)) {\n            return old.resolver(node);\n        }\n\n        return super.resolver(node);\n    }\n\n    /**\n     * @dev Returns the address that owns the specified node.\n     * @param node The specified node.\n     * @return address of the owner.\n     */\n    function owner(bytes32 node) public view returns (address) {\n        if (!recordExists(node)) {\n            return old.owner(node);\n        }\n\n        return super.owner(node);\n    }\n\n    /**\n     * @dev Returns the TTL of a node, and any records associated with it.\n     * @param node The specified node.\n     * @return ttl of the node.\n     */\n    function ttl(bytes32 node) public view returns (uint64) {\n        if (!recordExists(node)) {\n            return old.ttl(node);\n        }\n\n        return super.ttl(node);\n    }\n\n    function _setOwner(bytes32 node, address owner) internal {\n        address addr = owner;\n        if (addr == address(0x0)) {\n            addr = address(this);\n        }\n\n        super._setOwner(node, addr);\n    }\n}"
          },
          {
            "id": 0,
            "path": "@ensdomains/ens/contracts/ENS.sol",
            "name": "ENS.sol",
            "source": "pragma solidity >=0.4.24;\n\ninterface ENS {\n\n    // Logged when the owner of a node assigns a new owner to a subnode.\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n    // Logged when the owner of a node transfers ownership to a new account.\n    event Transfer(bytes32 indexed node, address owner);\n\n    // Logged when the resolver for a node changes.\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    // Logged when the TTL of a node changes\n    event NewTTL(bytes32 indexed node, uint64 ttl);\n\n    // Logged when an operator is added or removed.\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl) external;\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external;\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external returns(bytes32);\n    function setResolver(bytes32 node, address resolver) external;\n    function setOwner(bytes32 node, address owner) external;\n    function setTTL(bytes32 node, uint64 ttl) external;\n    function setApprovalForAll(address operator, bool approved) external;\n    function owner(bytes32 node) external view returns (address);\n    function resolver(bytes32 node) external view returns (address);\n    function ttl(bytes32 node) external view returns (uint64);\n    function recordExists(bytes32 node) external view returns (bool);\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "_old",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "function",
            "name": "setResolver",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "resolver",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "resolver",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setSubnodeOwner",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "label",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setTTL",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "ttl",
                "type": "uint64",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "owner",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setRecord",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "resolver",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "ttl",
                "type": "uint64",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "old",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "recordExists",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setApprovalForAll",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "operator",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "approved",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setOwner",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setSubnodeRecord",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "label",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "resolver",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "ttl",
                "type": "uint64",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "ttl",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint64",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "isApprovedForAll",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "operator",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "event",
            "name": "NewOwner",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "label",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewResolver",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "resolver",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewTTL",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "ttl",
                "type": "uint64",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "Transfer",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ApprovalForAll",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "operator",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "approved",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": [
          {
            "inputs": [
              {
                "internalType": "contract ENS",
                "name": "_old",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "label",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "NewOwner",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "resolver",
                "type": "address"
              }
            ],
            "name": "NewResolver",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "uint64",
                "name": "ttl",
                "type": "uint64"
              }
            ],
            "name": "NewTTL",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "old",
            "outputs": [
              {
                "internalType": "contract ENS",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "recordExists",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "resolver",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "setOwner",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "resolver",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "ttl",
                "type": "uint64"
              }
            ],
            "name": "setRecord",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "resolver",
                "type": "address"
              }
            ],
            "name": "setResolver",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "label",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "setSubnodeOwner",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "label",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "resolver",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "ttl",
                "type": "uint64"
              }
            ],
            "name": "setSubnodeRecord",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "ttl",
                "type": "uint64"
              }
            ],
            "name": "setTTL",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "ttl",
            "outputs": [
              {
                "internalType": "uint64",
                "name": "",
                "type": "uint64"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "states": [
          {
            "name": "records",
            "type": "mapping (bytes32 => tuple)",
            "storage_location": "memory",
            "components": [
              {
                "name": "owner",
                "type": "address",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x24b042c6b915eec54e1f40e020b38664a359a45e170e73dda6e7b1a3e4560320",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "resolver",
                "type": "address",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x24b042c6b915eec54e1f40e020b38664a359a45e170e73dda6e7b1a3e4560321",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "ttl",
                "type": "uint64",
                "storage_location": "memory",
                "components": null,
                "offset": 160,
                "index": "0x24b042c6b915eec54e1f40e020b38664a359a45e170e73dda6e7b1a3e4560321",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false
          },
          {
            "name": "operators",
            "type": "mapping (address => mapping (address => bool))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false
          },
          {
            "name": "old",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2020-04-16T00:41:00Z",
      "language": "solidity",
      "in_project": false
    },
    {
      "id": "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "contract_id": "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
      "contract_name": "Timelock",
      "ens_domain": null,
      "type": "contract",
      "standard": "custom_proxy",
      "standards": [
        "custom_proxy"
      ],
      "child_contracts": [
        {
          "id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
          "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
          "network_id": "1"
        }
      ],
      "evm_version": "",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": true,
      "optimization_runs": 999999,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "Timelock.sol",
            "name": "Timelock.sol",
            "source": "/**\n *Submitted for verification at Etherscan.io on 2020-09-14\n*/\n\npragma solidity ^0.5.16;\n\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/Math.sol\n// Subject to the MIT license.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot underflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction underflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot underflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers.\n     * Reverts on division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers.\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\ncontract Timelock {\n    using SafeMath for uint;\n\n    event NewAdmin(address indexed newAdmin);\n    event NewPendingAdmin(address indexed newPendingAdmin);\n    event NewDelay(uint indexed newDelay);\n    event CancelTransaction(bytes32 indexed txHash, address indexed target, uint value, string signature,  bytes data, uint eta);\n    event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint value, string signature,  bytes data, uint eta);\n    event QueueTransaction(bytes32 indexed txHash, address indexed target, uint value, string signature, bytes data, uint eta);\n\n    uint public constant GRACE_PERIOD = 14 days;\n    uint public constant MINIMUM_DELAY = 2 days;\n    uint public constant MAXIMUM_DELAY = 30 days;\n\n    address public admin;\n    address public pendingAdmin;\n    uint public delay;\n\n    mapping (bytes32 => bool) public queuedTransactions;\n\n\n    constructor(address admin_, uint delay_) public {\n        require(delay_ >= MINIMUM_DELAY, \"Timelock::constructor: Delay must exceed minimum delay.\");\n        require(delay_ <= MAXIMUM_DELAY, \"Timelock::setDelay: Delay must not exceed maximum delay.\");\n\n        admin = admin_;\n        delay = delay_;\n    }\n\n    function() external payable { }\n\n    function setDelay(uint delay_) public {\n        require(msg.sender == address(this), \"Timelock::setDelay: Call must come from Timelock.\");\n        require(delay_ >= MINIMUM_DELAY, \"Timelock::setDelay: Delay must exceed minimum delay.\");\n        require(delay_ <= MAXIMUM_DELAY, \"Timelock::setDelay: Delay must not exceed maximum delay.\");\n        delay = delay_;\n\n        emit NewDelay(delay);\n    }\n\n    function acceptAdmin() public {\n        require(msg.sender == pendingAdmin, \"Timelock::acceptAdmin: Call must come from pendingAdmin.\");\n        admin = msg.sender;\n        pendingAdmin = address(0);\n\n        emit NewAdmin(admin);\n    }\n\n    function setPendingAdmin(address pendingAdmin_) public {\n        require(msg.sender == address(this), \"Timelock::setPendingAdmin: Call must come from Timelock.\");\n        pendingAdmin = pendingAdmin_;\n\n        emit NewPendingAdmin(pendingAdmin);\n    }\n\n    function queueTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public returns (bytes32) {\n        require(msg.sender == admin, \"Timelock::queueTransaction: Call must come from admin.\");\n        require(eta >= getBlockTimestamp().add(delay), \"Timelock::queueTransaction: Estimated execution block must satisfy delay.\");\n\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\n        queuedTransactions[txHash] = true;\n\n        emit QueueTransaction(txHash, target, value, signature, data, eta);\n        return txHash;\n    }\n\n    function cancelTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public {\n        require(msg.sender == admin, \"Timelock::cancelTransaction: Call must come from admin.\");\n\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\n        queuedTransactions[txHash] = false;\n\n        emit CancelTransaction(txHash, target, value, signature, data, eta);\n    }\n\n    function executeTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public payable returns (bytes memory) {\n        require(msg.sender == admin, \"Timelock::executeTransaction: Call must come from admin.\");\n\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\n        require(queuedTransactions[txHash], \"Timelock::executeTransaction: Transaction hasn't been queued.\");\n        require(getBlockTimestamp() >= eta, \"Timelock::executeTransaction: Transaction hasn't surpassed time lock.\");\n        require(getBlockTimestamp() <= eta.add(GRACE_PERIOD), \"Timelock::executeTransaction: Transaction is stale.\");\n\n        queuedTransactions[txHash] = false;\n\n        bytes memory callData;\n\n        if (bytes(signature).length == 0) {\n            callData = data;\n        } else {\n            callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\n        }\n\n        // solium-disable-next-line security/no-call-value\n        (bool success, bytes memory returnData) = target.call.value(value)(callData);\n        require(success, \"Timelock::executeTransaction: Transaction execution reverted.\");\n\n        emit ExecuteTransaction(txHash, target, value, signature, data, eta);\n\n        return returnData;\n    }\n\n    function getBlockTimestamp() internal view returns (uint) {\n        // solium-disable-next-line security/no-block-members\n        return block.timestamp;\n    }\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "admin_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "delay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "function",
            "name": "admin",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MINIMUM_DELAY",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "queueTransaction",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setDelay",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "delay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "delay",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setImplementation",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "implementation_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "cancelTransaction",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setPendingAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "pendingAdmin_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "GRACE_PERIOD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAXIMUM_DELAY",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "pendingAdmin",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "queuedTransactions",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "implementation",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "acceptAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [],
            "outputs": []
          },
          {
            "type": "function",
            "name": "executeTransaction",
            "constant": false,
            "anonymous": false,
            "stateMutability": "payable",
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "event",
            "name": "QueueTransaction",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalExecuted",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalQueued",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCanceled",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalThresholdSet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCreated",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewPendingAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ExecuteTransaction",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewImplementation",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VoteCast",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "CancelTransaction",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingDelaySet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewDelay",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "newDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingPeriodSet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "admin_",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "delay_",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "txHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "CancelTransaction",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "txHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "ExecuteTransaction",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "NewAdmin",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "newDelay",
                "type": "uint256"
              }
            ],
            "name": "NewDelay",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "newPendingAdmin",
                "type": "address"
              }
            ],
            "name": "NewPendingAdmin",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "txHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "QueueTransaction",
            "type": "event"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "GRACE_PERIOD",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAXIMUM_DELAY",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MINIMUM_DELAY",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "acceptAdmin",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "admin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "cancelTransaction",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "delay",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "executeTransaction",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "pendingAdmin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "signature",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "queueTransaction",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "name": "queuedTransactions",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "delay_",
                "type": "uint256"
              }
            ],
            "name": "setDelay",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "pendingAdmin_",
                "type": "address"
              }
            ],
            "name": "setPendingAdmin",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "states": [
          {
            "name": "queuedTransactions",
            "type": "mapping (bytes32 => bool)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "implementation",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "delay",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2020-09-16T20:19:49Z",
      "language": "solidity",
      "in_project": false
    },
    {
      "id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "contract_id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
      "contract_name": "GovernorBravoDelegator",
      "ens_domain": null,
      "type": "contract",
      "standard": "custom_proxy",
      "standards": [
        "custom_proxy"
      ],
      "child_contracts": [
        {
          "id": "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
          "address": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
          "network_id": "1"
        }
      ],
      "evm_version": "",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": true,
      "optimization_runs": 200,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "contracts/GovernorBravoDelegator.sol",
            "name": "GovernorBravoDelegator.sol",
            "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"./GovernorBravoInterfaces.sol\";\n\ncontract GovernorBravoDelegator is GovernorBravoDelegatorStorage, GovernorBravoEvents {\n\tconstructor(\n\t\t\taddress timelock_,\n\t\t\taddress uni_,\n\t\t\taddress admin_,\n\t        address implementation_,\n\t        uint votingPeriod_,\n\t        uint votingDelay_,\n            uint proposalThreshold_) public {\n\n        // Admin set to msg.sender for initialization\n        admin = msg.sender;\n\n        delegateTo(implementation_, abi.encodeWithSignature(\"initialize(address,address,uint256,uint256,uint256)\",\n                                                            timelock_,\n                                                            uni_,\n                                                            votingPeriod_,\n                                                            votingDelay_,\n                                                            proposalThreshold_));\n\n        _setImplementation(implementation_);\n\n\t\tadmin = admin_;\n\t}\n\n\n\t/**\n     * @notice Called by the admin to update the implementation of the delegator\n     * @param implementation_ The address of the new implementation for delegation\n     */\n    function _setImplementation(address implementation_) public {\n        require(msg.sender == admin, \"GovernorBravoDelegator::_setImplementation: admin only\");\n        require(implementation_ != address(0), \"GovernorBravoDelegator::_setImplementation: invalid implementation address\");\n\n        address oldImplementation = implementation;\n        implementation = implementation_;\n\n        emit NewImplementation(oldImplementation, implementation);\n    }\n\n    /**\n     * @notice Internal method to delegate execution to another contract\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\n     * @param callee The contract to delegatecall\n     * @param data The raw data to delegatecall\n     */\n    function delegateTo(address callee, bytes memory data) internal {\n        (bool success, bytes memory returnData) = callee.delegatecall(data);\n        assembly {\n            if eq(success, 0) {\n                revert(add(returnData, 0x20), returndatasize)\n            }\n        }\n    }\n\n\t/**\n     * @dev Delegates execution to an implementation contract.\n     * It returns to the external caller whatever the implementation returns\n     * or forwards reverts.\n     */\n    function () external payable {\n        // delegate all other functions to current implementation\n        (bool success, ) = implementation.delegatecall(msg.data);\n\n        assembly {\n              let free_mem_ptr := mload(0x40)\n              returndatacopy(free_mem_ptr, 0, returndatasize)\n\n              switch success\n              case 0 { revert(free_mem_ptr, returndatasize) }\n              default { return(free_mem_ptr, returndatasize) }\n        }\n    }\n}"
          },
          {
            "id": 1,
            "path": "contracts/GovernorBravoInterfaces.sol",
            "name": "GovernorBravoInterfaces.sol",
            "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\n\ncontract GovernorBravoEvents {\n    /// @notice An event emitted when a new proposal is created\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\n\n    /// @notice An event emitted when a vote has been cast on a proposal\n    /// @param voter The address which casted a vote\n    /// @param proposalId The proposal id which was voted on\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\n    /// @param votes Number of votes which were cast by the voter\n    /// @param reason The reason given for the vote by the voter\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\n\n    /// @notice An event emitted when a proposal has been canceled\n    event ProposalCanceled(uint id);\n\n    /// @notice An event emitted when a proposal has been queued in the Timelock\n    event ProposalQueued(uint id, uint eta);\n\n    /// @notice An event emitted when a proposal has been executed in the Timelock\n    event ProposalExecuted(uint id);\n\n    /// @notice An event emitted when the voting delay is set\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\n\n    /// @notice An event emitted when the voting period is set\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\n\n    /// @notice Emitted when implementation is changed\n    event NewImplementation(address oldImplementation, address newImplementation);\n\n    /// @notice Emitted when proposal threshold is set\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\n\n    /// @notice Emitted when pendingAdmin is changed\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\n\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\n    event NewAdmin(address oldAdmin, address newAdmin);\n}\n\ncontract GovernorBravoDelegatorStorage {\n    /// @notice Administrator for this contract\n    address public admin;\n\n    /// @notice Pending administrator for this contract\n    address public pendingAdmin;\n\n    /// @notice Active brains of Governor\n    address public implementation;\n}\n\n\n/**\n * @title Storage for Governor Bravo Delegate\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\n * GovernorBravoDelegateStorageVX.\n */\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\n\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\n    uint public votingDelay;\n\n    /// @notice The duration of voting on a proposal, in blocks\n    uint public votingPeriod;\n\n    /// @notice The number of votes required in order for a voter to become a proposer\n    uint public proposalThreshold;\n\n    /// @notice Initial proposal id set at become\n    uint public initialProposalId;\n\n    /// @notice The total number of proposals\n    uint public proposalCount;\n\n    /// @notice The address of the Uniswap Protocol Timelock\n    TimelockInterface public timelock;\n\n    /// @notice The address of the Uniswap governance token\n    UniInterface public uni;\n\n    /// @notice The official record of all proposals ever proposed\n    mapping (uint => Proposal) public proposals;\n\n    /// @notice The latest proposal for each proposer\n    mapping (address => uint) public latestProposalIds;\n\n\n    struct Proposal {\n        /// @notice Unique id for looking up a proposal\n        uint id;\n\n        /// @notice Creator of the proposal\n        address proposer;\n\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\n        uint eta;\n\n        /// @notice the ordered list of target addresses for calls to be made\n        address[] targets;\n\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\n        uint[] values;\n\n        /// @notice The ordered list of function signatures to be called\n        string[] signatures;\n\n        /// @notice The ordered list of calldata to be passed to each call\n        bytes[] calldatas;\n\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\n        uint startBlock;\n\n        /// @notice The block at which voting ends: votes must be cast prior to this block\n        uint endBlock;\n\n        /// @notice Current number of votes in favor of this proposal\n        uint forVotes;\n\n        /// @notice Current number of votes in opposition to this proposal\n        uint againstVotes;\n\n        /// @notice Current number of votes for abstaining for this proposal\n        uint abstainVotes;\n\n        /// @notice Flag marking whether the proposal has been canceled\n        bool canceled;\n\n        /// @notice Flag marking whether the proposal has been executed\n        bool executed;\n\n        /// @notice Receipts of ballots for the entire set of voters\n        mapping (address => Receipt) receipts;\n    }\n\n    /// @notice Ballot receipt record for a voter\n    struct Receipt {\n        /// @notice Whether or not a vote has been cast\n        bool hasVoted;\n\n        /// @notice Whether or not the voter supports the proposal or abstains\n        uint8 support;\n\n        /// @notice The number of votes the voter had, which were cast\n        uint96 votes;\n    }\n\n    /// @notice Possible states that a proposal may be in\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n}\n\ninterface TimelockInterface {\n    function delay() external view returns (uint);\n    function GRACE_PERIOD() external view returns (uint);\n    function acceptAdmin() external;\n    function queuedTransactions(bytes32 hash) external view returns (bool);\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\n}\n\ninterface UniInterface {\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\n}\n\ninterface GovernorAlpha {\n    /// @notice The total number of proposals\n    function proposalCount() external returns (uint);\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "timelock_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "uni_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "admin_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "implementation_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "votingPeriod_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votingDelay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposalThreshold_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "function",
            "name": "quorumVotes",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "castVoteBySig",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "v",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "r",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "s",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "MIN_VOTING_DELAY",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_PROPOSAL_THRESHOLD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "pendingAdmin",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "propose",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposals",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "timelock",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_VOTING_DELAY",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "castVote",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "MIN_PROPOSAL_THRESHOLD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposalThreshold",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "getActions",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposalCount",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "cancel",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "_setPendingAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "getReceipt",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "storage_location": "default",
                "components": [
                  {
                    "name": "hasVoted",
                    "type": "bool",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "bool"
                    }
                  },
                  {
                    "name": "support",
                    "type": "uint8",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  },
                  {
                    "name": "votes",
                    "type": "uint96",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  }
                ],
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false
              }
            ]
          },
          {
            "type": "function",
            "name": "admin",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "votingDelay",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "votingPeriod",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "name",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "DOMAIN_TYPEHASH",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_acceptAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [],
            "outputs": []
          },
          {
            "type": "function",
            "name": "queue",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "castVoteWithReason",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "execute",
            "constant": false,
            "anonymous": false,
            "stateMutability": "payable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "initialize",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "timelock_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "uni_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "votingPeriod_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votingDelay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposalThreshold_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "initialProposalId",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "state",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposalMaxOperations",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "latestProposalIds",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_VOTING_PERIOD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setVotingPeriod",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "_setImplementation",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "implementation_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "uni",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "implementation",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "BALLOT_TYPEHASH",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setVotingDelay",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "MIN_VOTING_PERIOD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setProposalThreshold",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "_initiate",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalCount",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "event",
            "name": "ProposalThresholdSet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalExecuted",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingDelaySet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewImplementation",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalQueued",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCreated",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VoteCast",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingPeriodSet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewPendingAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCanceled",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "timelock_",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "uni_",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "admin_",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "implementation_",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "votingPeriod_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "votingDelay_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "proposalThreshold_",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "oldAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "NewAdmin",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "oldImplementation",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newImplementation",
                "type": "address"
              }
            ],
            "name": "NewImplementation",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "oldPendingAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newPendingAdmin",
                "type": "address"
              }
            ],
            "name": "NewPendingAdmin",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ProposalCanceled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "proposer",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address[]",
                "name": "targets",
                "type": "address[]"
              },
              {
                "indexed": false,
                "internalType": "uint256[]",
                "name": "values",
                "type": "uint256[]"
              },
              {
                "indexed": false,
                "internalType": "string[]",
                "name": "signatures",
                "type": "string[]"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "calldatas",
                "type": "bytes[]"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "startBlock",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "endBlock",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "description",
                "type": "string"
              }
            ],
            "name": "ProposalCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ProposalExecuted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "ProposalQueued",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldProposalThreshold",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newProposalThreshold",
                "type": "uint256"
              }
            ],
            "name": "ProposalThresholdSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "voter",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "support",
                "type": "uint8"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "votes",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "reason",
                "type": "string"
              }
            ],
            "name": "VoteCast",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldVotingDelay",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newVotingDelay",
                "type": "uint256"
              }
            ],
            "name": "VotingDelaySet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldVotingPeriod",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newVotingPeriod",
                "type": "uint256"
              }
            ],
            "name": "VotingPeriodSet",
            "type": "event"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "implementation_",
                "type": "address"
              }
            ],
            "name": "_setImplementation",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "admin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "pendingAdmin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "states": [
          {
            "name": "proposalThreshold",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "latestProposalIds",
            "type": "mapping (address => uint256)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
            "indexed": false
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "implementation",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "votingPeriod",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "initialProposalId",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "timelock",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "proposals",
            "type": "mapping (uint256 => tuple)",
            "storage_location": "memory",
            "components": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000c",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 8,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000c",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "receipts",
                "type": "mapping (address => tuple)",
                "storage_location": "memory",
                "components": [
                  {
                    "name": "hasVoted",
                    "type": "bool",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "bool"
                    }
                  },
                  {
                    "name": "support",
                    "type": "uint8",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 8,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  },
                  {
                    "name": "votes",
                    "type": "uint96",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 16,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  }
                ],
                "offset": 0,
                "index": "0x000000000000000000000000000000000000000000000000000000000000000d",
                "indexed": false
              }
            ],
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
            "indexed": false
          },
          {
            "name": "implementation",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "votingDelay",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "proposalCount",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "uni",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2021-08-20T01:14:14Z",
      "language": "solidity",
      "in_project": false
    },
    {
      "id": "eth:1:0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
      "contract_id": "eth:1:0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41",
      "contract_name": "PublicResolver",
      "ens_domain": null,
      "type": "contract",
      "evm_version": "default",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": false,
      "optimization_runs": 200,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "PublicResolver.sol",
            "name": "PublicResolver.sol",
            "source": "// File: @ensdomains/ens/contracts/ENS.sol\n\npragma solidity >=0.4.24;\n\ninterface ENS {\n\n    // Logged when the owner of a node assigns a new owner to a subnode.\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n    // Logged when the owner of a node transfers ownership to a new account.\n    event Transfer(bytes32 indexed node, address owner);\n\n    // Logged when the resolver for a node changes.\n    event NewResolver(bytes32 indexed node, address resolver);\n\n    // Logged when the TTL of a node changes\n    event NewTTL(bytes32 indexed node, uint64 ttl);\n\n\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external;\n    function setResolver(bytes32 node, address resolver) external;\n    function setOwner(bytes32 node, address owner) external;\n    function setTTL(bytes32 node, uint64 ttl) external;\n    function owner(bytes32 node) external view returns (address);\n    function resolver(bytes32 node) external view returns (address);\n    function ttl(bytes32 node) external view returns (uint64);\n\n}\n\n// File: contracts/ResolverBase.sol\n\npragma solidity ^0.5.0;\n\ncontract ResolverBase {\n    bytes4 private constant INTERFACE_META_ID = 0x01ffc9a7;\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == INTERFACE_META_ID;\n    }\n\n    function isAuthorised(bytes32 node) internal view returns(bool);\n\n    modifier authorised(bytes32 node) {\n        require(isAuthorised(node));\n        _;\n    }\n\n    function bytesToAddress(bytes memory b) internal pure returns(address payable a) {\n        require(b.length == 20);\n        assembly {\n            a := div(mload(add(b, 32)), exp(256, 12))\n        }\n    }\n\n    function addressToBytes(address a) internal pure returns(bytes memory b) {\n        b = new bytes(20);\n        assembly {\n            mstore(add(b, 32), mul(a, exp(256, 12)))\n        }\n    }\n}\n\n// File: contracts/profiles/ABIResolver.sol\n\npragma solidity ^0.5.0;\n\n\ncontract ABIResolver is ResolverBase {\n    bytes4 constant private ABI_INTERFACE_ID = 0x2203ab56;\n\n    event ABIChanged(bytes32 indexed node, uint256 indexed contentType);\n\n    mapping(bytes32=>mapping(uint256=>bytes)) abis;\n\n    /**\n     * Sets the ABI associated with an ENS node.\n     * Nodes may have one ABI of each content type. To remove an ABI, set it to\n     * the empty string.\n     * @param node The node to update.\n     * @param contentType The content type of the ABI\n     * @param data The ABI data.\n     */\n    function setABI(bytes32 node, uint256 contentType, bytes calldata data) external authorised(node) {\n        // Content types must be powers of 2\n        require(((contentType - 1) & contentType) == 0);\n\n        abis[node][contentType] = data;\n        emit ABIChanged(node, contentType);\n    }\n\n    /**\n     * Returns the ABI associated with an ENS node.\n     * Defined in EIP205.\n     * @param node The ENS node to query\n     * @param contentTypes A bitwise OR of the ABI formats accepted by the caller.\n     * @return contentType The content type of the return value\n     * @return data The ABI data\n     */\n    function ABI(bytes32 node, uint256 contentTypes) external view returns (uint256, bytes memory) {\n        mapping(uint256=>bytes) storage abiset = abis[node];\n\n        for (uint256 contentType = 1; contentType <= contentTypes; contentType <<= 1) {\n            if ((contentType & contentTypes) != 0 && abiset[contentType].length > 0) {\n                return (contentType, abiset[contentType]);\n            }\n        }\n\n        return (0, bytes(\"\"));\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == ABI_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: contracts/profiles/AddrResolver.sol\n\npragma solidity ^0.5.0;\n\n\ncontract AddrResolver is ResolverBase {\n    bytes4 constant private ADDR_INTERFACE_ID = 0x3b3b57de;\n    bytes4 constant private ADDRESS_INTERFACE_ID = 0xf1cb7e06;\n    uint constant private COIN_TYPE_ETH = 60;\n\n    event AddrChanged(bytes32 indexed node, address a);\n    event AddressChanged(bytes32 indexed node, uint coinType, bytes newAddress);\n\n    mapping(bytes32=>mapping(uint=>bytes)) _addresses;\n\n    /**\n     * Sets the address associated with an ENS node.\n     * May only be called by the owner of that node in the ENS registry.\n     * @param node The node to update.\n     * @param a The address to set.\n     */\n    function setAddr(bytes32 node, address a) external authorised(node) {\n        setAddr(node, COIN_TYPE_ETH, addressToBytes(a));\n    }\n\n    /**\n     * Returns the address associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated address.\n     */\n    function addr(bytes32 node) public view returns (address payable) {\n        bytes memory a = addr(node, COIN_TYPE_ETH);\n        if(a.length == 0) {\n            return address(0);\n        }\n        return bytesToAddress(a);\n    }\n\n    function setAddr(bytes32 node, uint coinType, bytes memory a) public authorised(node) {\n        emit AddressChanged(node, coinType, a);\n        if(coinType == COIN_TYPE_ETH) {\n            emit AddrChanged(node, bytesToAddress(a));\n        }\n        _addresses[node][coinType] = a;\n    }\n\n    function addr(bytes32 node, uint coinType) public view returns(bytes memory) {\n        return _addresses[node][coinType];\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == ADDR_INTERFACE_ID || interfaceID == ADDRESS_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: contracts/profiles/ContentHashResolver.sol\n\npragma solidity ^0.5.0;\n\n\ncontract ContentHashResolver is ResolverBase {\n    bytes4 constant private CONTENT_HASH_INTERFACE_ID = 0xbc1c58d1;\n\n    event ContenthashChanged(bytes32 indexed node, bytes hash);\n\n    mapping(bytes32=>bytes) hashes;\n\n    /**\n     * Sets the contenthash associated with an ENS node.\n     * May only be called by the owner of that node in the ENS registry.\n     * @param node The node to update.\n     * @param hash The contenthash to set\n     */\n    function setContenthash(bytes32 node, bytes calldata hash) external authorised(node) {\n        hashes[node] = hash;\n        emit ContenthashChanged(node, hash);\n    }\n\n    /**\n     * Returns the contenthash associated with an ENS node.\n     * @param node The ENS node to query.\n     * @return The associated contenthash.\n     */\n    function contenthash(bytes32 node) external view returns (bytes memory) {\n        return hashes[node];\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == CONTENT_HASH_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: @ensdomains/dnssec-oracle/contracts/BytesUtils.sol\n\npragma solidity >0.4.23;\n\nlibrary BytesUtils {\n    /*\n    * @dev Returns the keccak-256 hash of a byte range.\n    * @param self The byte string to hash.\n    * @param offset The position to start hashing at.\n    * @param len The number of bytes to hash.\n    * @return The hash of the byte range.\n    */\n    function keccak(bytes memory self, uint offset, uint len) internal pure returns (bytes32 ret) {\n        require(offset + len <= self.length);\n        assembly {\n            ret := keccak256(add(add(self, 32), offset), len)\n        }\n    }\n\n\n    /*\n    * @dev Returns a positive number if `other` comes lexicographically after\n    *      `self`, a negative number if it comes before, or zero if the\n    *      contents of the two bytes are equal.\n    * @param self The first bytes to compare.\n    * @param other The second bytes to compare.\n    * @return The result of the comparison.\n    */\n    function compare(bytes memory self, bytes memory other) internal pure returns (int) {\n        return compare(self, 0, self.length, other, 0, other.length);\n    }\n\n    /*\n    * @dev Returns a positive number if `other` comes lexicographically after\n    *      `self`, a negative number if it comes before, or zero if the\n    *      contents of the two bytes are equal. Comparison is done per-rune,\n    *      on unicode codepoints.\n    * @param self The first bytes to compare.\n    * @param offset The offset of self.\n    * @param len    The length of self.\n    * @param other The second bytes to compare.\n    * @param otheroffset The offset of the other string.\n    * @param otherlen    The length of the other string.\n    * @return The result of the comparison.\n    */\n    function compare(bytes memory self, uint offset, uint len, bytes memory other, uint otheroffset, uint otherlen) internal pure returns (int) {\n        uint shortest = len;\n        if (otherlen < len)\n        shortest = otherlen;\n\n        uint selfptr;\n        uint otherptr;\n\n        assembly {\n            selfptr := add(self, add(offset, 32))\n            otherptr := add(other, add(otheroffset, 32))\n        }\n        for (uint idx = 0; idx < shortest; idx += 32) {\n            uint a;\n            uint b;\n            assembly {\n                a := mload(selfptr)\n                b := mload(otherptr)\n            }\n            if (a != b) {\n                // Mask out irrelevant bytes and check again\n                uint mask;\n                if (shortest > 32) {\n                    mask = uint256(- 1); // aka 0xffffff....\n                } else {\n                    mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\n                }\n                uint diff = (a & mask) - (b & mask);\n                if (diff != 0)\n                return int(diff);\n            }\n            selfptr += 32;\n            otherptr += 32;\n        }\n\n        return int(len) - int(otherlen);\n    }\n\n    /*\n    * @dev Returns true if the two byte ranges are equal.\n    * @param self The first byte range to compare.\n    * @param offset The offset into the first byte range.\n    * @param other The second byte range to compare.\n    * @param otherOffset The offset into the second byte range.\n    * @param len The number of bytes to compare\n    * @return True if the byte ranges are equal, false otherwise.\n    */\n    function equals(bytes memory self, uint offset, bytes memory other, uint otherOffset, uint len) internal pure returns (bool) {\n        return keccak(self, offset, len) == keccak(other, otherOffset, len);\n    }\n\n    /*\n    * @dev Returns true if the two byte ranges are equal with offsets.\n    * @param self The first byte range to compare.\n    * @param offset The offset into the first byte range.\n    * @param other The second byte range to compare.\n    * @param otherOffset The offset into the second byte range.\n    * @return True if the byte ranges are equal, false otherwise.\n    */\n    function equals(bytes memory self, uint offset, bytes memory other, uint otherOffset) internal pure returns (bool) {\n        return keccak(self, offset, self.length - offset) == keccak(other, otherOffset, other.length - otherOffset);\n    }\n\n    /*\n    * @dev Compares a range of 'self' to all of 'other' and returns True iff\n    *      they are equal.\n    * @param self The first byte range to compare.\n    * @param offset The offset into the first byte range.\n    * @param other The second byte range to compare.\n    * @return True if the byte ranges are equal, false otherwise.\n    */\n    function equals(bytes memory self, uint offset, bytes memory other) internal pure returns (bool) {\n        return self.length >= offset + other.length && equals(self, offset, other, 0, other.length);\n    }\n\n    /*\n    * @dev Returns true if the two byte ranges are equal.\n    * @param self The first byte range to compare.\n    * @param other The second byte range to compare.\n    * @return True if the byte ranges are equal, false otherwise.\n    */\n    function equals(bytes memory self, bytes memory other) internal pure returns(bool) {\n        return self.length == other.length && equals(self, 0, other, 0, self.length);\n    }\n\n    /*\n    * @dev Returns the 8-bit number at the specified index of self.\n    * @param self The byte string.\n    * @param idx The index into the bytes\n    * @return The specified 8 bits of the string, interpreted as an integer.\n    */\n    function readUint8(bytes memory self, uint idx) internal pure returns (uint8 ret) {\n        return uint8(self[idx]);\n    }\n\n    /*\n    * @dev Returns the 16-bit number at the specified index of self.\n    * @param self The byte string.\n    * @param idx The index into the bytes\n    * @return The specified 16 bits of the string, interpreted as an integer.\n    */\n    function readUint16(bytes memory self, uint idx) internal pure returns (uint16 ret) {\n        require(idx + 2 <= self.length);\n        assembly {\n            ret := and(mload(add(add(self, 2), idx)), 0xFFFF)\n        }\n    }\n\n    /*\n    * @dev Returns the 32-bit number at the specified index of self.\n    * @param self The byte string.\n    * @param idx The index into the bytes\n    * @return The specified 32 bits of the string, interpreted as an integer.\n    */\n    function readUint32(bytes memory self, uint idx) internal pure returns (uint32 ret) {\n        require(idx + 4 <= self.length);\n        assembly {\n            ret := and(mload(add(add(self, 4), idx)), 0xFFFFFFFF)\n        }\n    }\n\n    /*\n    * @dev Returns the 32 byte value at the specified index of self.\n    * @param self The byte string.\n    * @param idx The index into the bytes\n    * @return The specified 32 bytes of the string.\n    */\n    function readBytes32(bytes memory self, uint idx) internal pure returns (bytes32 ret) {\n        require(idx + 32 <= self.length);\n        assembly {\n            ret := mload(add(add(self, 32), idx))\n        }\n    }\n\n    /*\n    * @dev Returns the 32 byte value at the specified index of self.\n    * @param self The byte string.\n    * @param idx The index into the bytes\n    * @return The specified 32 bytes of the string.\n    */\n    function readBytes20(bytes memory self, uint idx) internal pure returns (bytes20 ret) {\n        require(idx + 20 <= self.length);\n        assembly {\n            ret := and(mload(add(add(self, 32), idx)), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000)\n        }\n    }\n\n    /*\n    * @dev Returns the n byte value at the specified index of self.\n    * @param self The byte string.\n    * @param idx The index into the bytes.\n    * @param len The number of bytes.\n    * @return The specified 32 bytes of the string.\n    */\n    function readBytesN(bytes memory self, uint idx, uint len) internal pure returns (bytes32 ret) {\n        require(len <= 32);\n        require(idx + len <= self.length);\n        assembly {\n            let mask := not(sub(exp(256, sub(32, len)), 1))\n            ret := and(mload(add(add(self, 32), idx)),  mask)\n        }\n    }\n\n    function memcpy(uint dest, uint src, uint len) private pure {\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        uint mask = 256 ** (32 - len) - 1;\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n\n    /*\n    * @dev Copies a substring into a new byte string.\n    * @param self The byte string to copy from.\n    * @param offset The offset to start copying at.\n    * @param len The number of bytes to copy.\n    */\n    function substring(bytes memory self, uint offset, uint len) internal pure returns(bytes memory) {\n        require(offset + len <= self.length);\n\n        bytes memory ret = new bytes(len);\n        uint dest;\n        uint src;\n\n        assembly {\n            dest := add(ret, 32)\n            src := add(add(self, 32), offset)\n        }\n        memcpy(dest, src, len);\n\n        return ret;\n    }\n\n    // Maps characters from 0x30 to 0x7A to their base32 values.\n    // 0xFF represents invalid characters in that range.\n    bytes constant base32HexTable = hex'00010203040506070809FFFFFFFFFFFFFF0A0B0C0D0E0F101112131415161718191A1B1C1D1E1FFFFFFFFFFFFFFFFFFFFF0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F';\n\n    /**\n     * @dev Decodes unpadded base32 data of up to one word in length.\n     * @param self The data to decode.\n     * @param off Offset into the string to start at.\n     * @param len Number of characters to decode.\n     * @return The decoded data, left aligned.\n     */\n    function base32HexDecodeWord(bytes memory self, uint off, uint len) internal pure returns(bytes32) {\n        require(len <= 52);\n\n        uint ret = 0;\n        uint8 decoded;\n        for(uint i = 0; i < len; i++) {\n            bytes1 char = self[off + i];\n            require(char >= 0x30 && char <= 0x7A);\n            decoded = uint8(base32HexTable[uint(uint8(char)) - 0x30]);\n            require(decoded <= 0x20);\n            if(i == len - 1) {\n                break;\n            }\n            ret = (ret << 5) | decoded;\n        }\n\n        uint bitlen = len * 5;\n        if(len % 8 == 0) {\n            // Multiple of 8 characters, no padding\n            ret = (ret << 5) | decoded;\n        } else if(len % 8 == 2) {\n            // Two extra characters - 1 byte\n            ret = (ret << 3) | (decoded >> 2);\n            bitlen -= 2;\n        } else if(len % 8 == 4) {\n            // Four extra characters - 2 bytes\n            ret = (ret << 1) | (decoded >> 4);\n            bitlen -= 4;\n        } else if(len % 8 == 5) {\n            // Five extra characters - 3 bytes\n            ret = (ret << 4) | (decoded >> 1);\n            bitlen -= 1;\n        } else if(len % 8 == 7) {\n            // Seven extra characters - 4 bytes\n            ret = (ret << 2) | (decoded >> 3);\n            bitlen -= 3;\n        } else {\n            revert();\n        }\n\n        return bytes32(ret << (256 - bitlen));\n    }\n}\n\n// File: @ensdomains/buffer/contracts/Buffer.sol\n\npragma solidity >0.4.18;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for writing to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n    /**\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n    *      a capacity. The capacity may be longer than the current value, in\n    *      which case it can be extended without the need to allocate more memory.\n    */\n    struct buffer {\n        bytes buf;\n        uint capacity;\n    }\n\n    /**\n    * @dev Initializes a buffer with an initial capacity.\n    * @param buf The buffer to initialize.\n    * @param capacity The number of bytes of space to allocate the buffer.\n    * @return The buffer, for chaining.\n    */\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n        if (capacity % 32 != 0) {\n            capacity += 32 - (capacity % 32);\n        }\n        // Allocate space for the buffer data\n        buf.capacity = capacity;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(buf, ptr)\n            mstore(ptr, 0)\n            mstore(0x40, add(32, add(ptr, capacity)))\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Initializes a new buffer from an existing bytes object.\n    *      Changes to the buffer may mutate the original value.\n    * @param b The bytes object to initialize the buffer with.\n    * @return A new buffer.\n    */\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n        buffer memory buf;\n        buf.buf = b;\n        buf.capacity = b.length;\n        return buf;\n    }\n\n    function resize(buffer memory buf, uint capacity) private pure {\n        bytes memory oldbuf = buf.buf;\n        init(buf, capacity);\n        append(buf, oldbuf);\n    }\n\n    function max(uint a, uint b) private pure returns(uint) {\n        if (a > b) {\n            return a;\n        }\n        return b;\n    }\n\n    /**\n    * @dev Sets buffer length to 0.\n    * @param buf The buffer to truncate.\n    * @return The original buffer, for chaining..\n    */\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\n        assembly {\n            let bufptr := mload(buf)\n            mstore(bufptr, 0)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The start offset to write to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {\n        require(len <= data.length);\n\n        if (off + len > buf.capacity) {\n            resize(buf, max(buf.capacity, len + off) * 2);\n        }\n\n        uint dest;\n        uint src;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Start address = buffer address + offset + sizeof(buffer length)\n            dest := add(add(bufptr, 32), off)\n            // Update buffer length if we're extending it\n            if gt(add(len, off), buflen) {\n                mstore(bufptr, add(len, off))\n            }\n            src := add(data, 32)\n        }\n\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        uint mask = 256 ** (32 - len) - 1;\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, data, len);\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, data, data.length);\n    }\n\n    /**\n    * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write the byte at.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {\n        if (off >= buf.capacity) {\n            resize(buf, buf.capacity * 2);\n        }\n\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Address = buffer address + sizeof(buffer length) + off\n            let dest := add(add(bufptr, off), 32)\n            mstore8(dest, data)\n            // Update buffer length if we extended it\n            if eq(off, buflen) {\n                mstore(bufptr, add(buflen, 1))\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n        return writeUint8(buf, buf.buf.length, data);\n    }\n\n    /**\n    * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n    *      exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write at.\n    * @param data The data to append.\n    * @param len The number of bytes to write (left-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {\n        if (len + off > buf.capacity) {\n            resize(buf, (len + off) * 2);\n        }\n\n        uint mask = 256 ** len - 1;\n        // Right-align data\n        data = data >> (8 * (32 - len));\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + off + len\n            let dest := add(add(bufptr, off), len)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(add(off, len), mload(bufptr)) {\n                mstore(bufptr, add(off, len))\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write at.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {\n        return write(buf, off, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chhaining.\n    */\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, data, 32);\n    }\n\n    /**\n    * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write at.\n    * @param data The data to append.\n    * @param len The number of bytes to write (right-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {\n        if (len + off > buf.capacity) {\n            resize(buf, (len + off) * 2);\n        }\n\n        uint mask = 256 ** len - 1;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + off + sizeof(buffer length) + len\n            let dest := add(add(bufptr, off), len)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(add(off, len), mload(bufptr)) {\n                mstore(bufptr, add(off, len))\n            }\n        }\n        return buf;\n    }\n\n    /**\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n     * exceed the capacity of the buffer.\n     * @param buf The buffer to append to.\n     * @param data The data to append.\n     * @return The original buffer.\n     */\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n        return writeInt(buf, buf.buf.length, data, len);\n    }\n}\n\n// File: @ensdomains/dnssec-oracle/contracts/RRUtils.sol\n\npragma solidity >0.4.23;\n\n\n\n/**\n* @dev RRUtils is a library that provides utilities for parsing DNS resource records.\n*/\nlibrary RRUtils {\n    using BytesUtils for *;\n    using Buffer for *;\n\n    /**\n    * @dev Returns the number of bytes in the DNS name at 'offset' in 'self'.\n    * @param self The byte array to read a name from.\n    * @param offset The offset to start reading at.\n    * @return The length of the DNS name at 'offset', in bytes.\n    */\n    function nameLength(bytes memory self, uint offset) internal pure returns(uint) {\n        uint idx = offset;\n        while (true) {\n            assert(idx < self.length);\n            uint labelLen = self.readUint8(idx);\n            idx += labelLen + 1;\n            if (labelLen == 0) {\n                break;\n            }\n        }\n        return idx - offset;\n    }\n\n    /**\n    * @dev Returns a DNS format name at the specified offset of self.\n    * @param self The byte array to read a name from.\n    * @param offset The offset to start reading at.\n    * @return The name.\n    */\n    function readName(bytes memory self, uint offset) internal pure returns(bytes memory ret) {\n        uint len = nameLength(self, offset);\n        return self.substring(offset, len);\n    }\n\n    /**\n    * @dev Returns the number of labels in the DNS name at 'offset' in 'self'.\n    * @param self The byte array to read a name from.\n    * @param offset The offset to start reading at.\n    * @return The number of labels in the DNS name at 'offset', in bytes.\n    */\n    function labelCount(bytes memory self, uint offset) internal pure returns(uint) {\n        uint count = 0;\n        while (true) {\n            assert(offset < self.length);\n            uint labelLen = self.readUint8(offset);\n            offset += labelLen + 1;\n            if (labelLen == 0) {\n                break;\n            }\n            count += 1;\n        }\n        return count;\n    }\n\n    /**\n    * @dev An iterator over resource records.\n    */\n    struct RRIterator {\n        bytes data;\n        uint offset;\n        uint16 dnstype;\n        uint16 class;\n        uint32 ttl;\n        uint rdataOffset;\n        uint nextOffset;\n    }\n\n    /**\n    * @dev Begins iterating over resource records.\n    * @param self The byte string to read from.\n    * @param offset The offset to start reading at.\n    * @return An iterator object.\n    */\n    function iterateRRs(bytes memory self, uint offset) internal pure returns (RRIterator memory ret) {\n        ret.data = self;\n        ret.nextOffset = offset;\n        next(ret);\n    }\n\n    /**\n    * @dev Returns true iff there are more RRs to iterate.\n    * @param iter The iterator to check.\n    * @return True iff the iterator has finished.\n    */\n    function done(RRIterator memory iter) internal pure returns(bool) {\n        return iter.offset >= iter.data.length;\n    }\n\n    /**\n    * @dev Moves the iterator to the next resource record.\n    * @param iter The iterator to advance.\n    */\n    function next(RRIterator memory iter) internal pure {\n        iter.offset = iter.nextOffset;\n        if (iter.offset >= iter.data.length) {\n            return;\n        }\n\n        // Skip the name\n        uint off = iter.offset + nameLength(iter.data, iter.offset);\n\n        // Read type, class, and ttl\n        iter.dnstype = iter.data.readUint16(off);\n        off += 2;\n        iter.class = iter.data.readUint16(off);\n        off += 2;\n        iter.ttl = iter.data.readUint32(off);\n        off += 4;\n\n        // Read the rdata\n        uint rdataLength = iter.data.readUint16(off);\n        off += 2;\n        iter.rdataOffset = off;\n        iter.nextOffset = off + rdataLength;\n    }\n\n    /**\n    * @dev Returns the name of the current record.\n    * @param iter The iterator.\n    * @return A new bytes object containing the owner name from the RR.\n    */\n    function name(RRIterator memory iter) internal pure returns(bytes memory) {\n        return iter.data.substring(iter.offset, nameLength(iter.data, iter.offset));\n    }\n\n    /**\n    * @dev Returns the rdata portion of the current record.\n    * @param iter The iterator.\n    * @return A new bytes object containing the RR's RDATA.\n    */\n    function rdata(RRIterator memory iter) internal pure returns(bytes memory) {\n        return iter.data.substring(iter.rdataOffset, iter.nextOffset - iter.rdataOffset);\n    }\n\n    /**\n    * @dev Checks if a given RR type exists in a type bitmap.\n    * @param self The byte string to read the type bitmap from.\n    * @param offset The offset to start reading at.\n    * @param rrtype The RR type to check for.\n    * @return True if the type is found in the bitmap, false otherwise.\n    */\n    function checkTypeBitmap(bytes memory self, uint offset, uint16 rrtype) internal pure returns (bool) {\n        uint8 typeWindow = uint8(rrtype >> 8);\n        uint8 windowByte = uint8((rrtype & 0xff) / 8);\n        uint8 windowBitmask = uint8(uint8(1) << (uint8(7) - uint8(rrtype & 0x7)));\n        for (uint off = offset; off < self.length;) {\n            uint8 window = self.readUint8(off);\n            uint8 len = self.readUint8(off + 1);\n            if (typeWindow < window) {\n                // We've gone past our window; it's not here.\n                return false;\n            } else if (typeWindow == window) {\n                // Check this type bitmap\n                if (len * 8 <= windowByte) {\n                    // Our type is past the end of the bitmap\n                    return false;\n                }\n                return (self.readUint8(off + windowByte + 2) & windowBitmask) != 0;\n            } else {\n                // Skip this type bitmap\n                off += len + 2;\n            }\n        }\n\n        return false;\n    }\n\n    function compareNames(bytes memory self, bytes memory other) internal pure returns (int) {\n        if (self.equals(other)) {\n            return 0;\n        }\n\n        uint off;\n        uint otheroff;\n        uint prevoff;\n        uint otherprevoff;\n        uint counts = labelCount(self, 0);\n        uint othercounts = labelCount(other, 0);\n\n        // Keep removing labels from the front of the name until both names are equal length\n        while (counts > othercounts) {\n            prevoff = off;\n            off = progress(self, off);\n            counts--;\n        }\n\n        while (othercounts > counts) {\n            otherprevoff = otheroff;\n            otheroff = progress(other, otheroff);\n            othercounts--;\n        }\n\n        // Compare the last nonequal labels to each other\n        while (counts > 0 && !self.equals(off, other, otheroff)) {\n            prevoff = off;\n            off = progress(self, off);\n            otherprevoff = otheroff;\n            otheroff = progress(other, otheroff);\n            counts -= 1;\n        }\n\n        if (off == 0) {\n            return -1;\n        }\n        if(otheroff == 0) {\n            return 1;\n        }\n\n        return self.compare(prevoff + 1, self.readUint8(prevoff), other, otherprevoff + 1, other.readUint8(otherprevoff));\n    }\n\n    function progress(bytes memory body, uint off) internal pure returns(uint) {\n        return off + 1 + body.readUint8(off);\n    }\n}\n\n// File: contracts/profiles/DNSResolver.sol\n\npragma solidity ^0.5.0;\n\n\n\ncontract DNSResolver is ResolverBase {\n    using RRUtils for *;\n    using BytesUtils for bytes;\n\n    bytes4 constant private DNS_RECORD_INTERFACE_ID = 0xa8fa5682;\n\n    // DNSRecordChanged is emitted whenever a given node/name/resource's RRSET is updated.\n    event DNSRecordChanged(bytes32 indexed node, bytes name, uint16 resource, bytes record);\n    // DNSRecordDeleted is emitted whenever a given node/name/resource's RRSET is deleted.\n    event DNSRecordDeleted(bytes32 indexed node, bytes name, uint16 resource);\n    // DNSZoneCleared is emitted whenever a given node's zone information is cleared.\n    event DNSZoneCleared(bytes32 indexed node);\n\n    // Version the mapping for each zone.  This allows users who have lost\n    // track of their entries to effectively delete an entire zone by bumping\n    // the version number.\n    // node => version\n    mapping(bytes32=>uint256) private versions;\n\n    // The records themselves.  Stored as binary RRSETs\n    // node => version => name => resource => data\n    mapping(bytes32=>mapping(uint256=>mapping(bytes32=>mapping(uint16=>bytes)))) private records;\n\n    // Count of number of entries for a given name.  Required for DNS resolvers\n    // when resolving wildcards.\n    // node => version => name => number of records\n    mapping(bytes32=>mapping(uint256=>mapping(bytes32=>uint16))) private nameEntriesCount;\n\n    /**\n     * Set one or more DNS records.  Records are supplied in wire-format.\n     * Records with the same node/name/resource must be supplied one after the\n     * other to ensure the data is updated correctly. For example, if the data\n     * was supplied:\n     *     a.example.com IN A 1.2.3.4\n     *     a.example.com IN A 5.6.7.8\n     *     www.example.com IN CNAME a.example.com.\n     * then this would store the two A records for a.example.com correctly as a\n     * single RRSET, however if the data was supplied:\n     *     a.example.com IN A 1.2.3.4\n     *     www.example.com IN CNAME a.example.com.\n     *     a.example.com IN A 5.6.7.8\n     * then this would store the first A record, the CNAME, then the second A\n     * record which would overwrite the first.\n     *\n     * @param node the namehash of the node for which to set the records\n     * @param data the DNS wire format records to set\n     */\n    function setDNSRecords(bytes32 node, bytes calldata data) external authorised(node) {\n        uint16 resource = 0;\n        uint256 offset = 0;\n        bytes memory name;\n        bytes memory value;\n        bytes32 nameHash;\n        // Iterate over the data to add the resource records\n        for (RRUtils.RRIterator memory iter = data.iterateRRs(0); !iter.done(); iter.next()) {\n            if (resource == 0) {\n                resource = iter.dnstype;\n                name = iter.name();\n                nameHash = keccak256(abi.encodePacked(name));\n                value = bytes(iter.rdata());\n            } else {\n                bytes memory newName = iter.name();\n                if (resource != iter.dnstype || !name.equals(newName)) {\n                    setDNSRRSet(node, name, resource, data, offset, iter.offset - offset, value.length == 0);\n                    resource = iter.dnstype;\n                    offset = iter.offset;\n                    name = newName;\n                    nameHash = keccak256(name);\n                    value = bytes(iter.rdata());\n                }\n            }\n        }\n        if (name.length > 0) {\n            setDNSRRSet(node, name, resource, data, offset, data.length - offset, value.length == 0);\n        }\n    }\n\n    /**\n     * Obtain a DNS record.\n     * @param node the namehash of the node for which to fetch the record\n     * @param name the keccak-256 hash of the fully-qualified name for which to fetch the record\n     * @param resource the ID of the resource as per https://en.wikipedia.org/wiki/List_of_DNS_record_types\n     * @return the DNS record in wire format if present, otherwise empty\n     */\n    function dnsRecord(bytes32 node, bytes32 name, uint16 resource) public view returns (bytes memory) {\n        return records[node][versions[node]][name][resource];\n    }\n\n    /**\n     * Check if a given node has records.\n     * @param node the namehash of the node for which to check the records\n     * @param name the namehash of the node for which to check the records\n     */\n    function hasDNSRecords(bytes32 node, bytes32 name) public view returns (bool) {\n        return (nameEntriesCount[node][versions[node]][name] != 0);\n    }\n\n    /**\n     * Clear all information for a DNS zone.\n     * @param node the namehash of the node for which to clear the zone\n     */\n    function clearDNSZone(bytes32 node) public authorised(node) {\n        versions[node]++;\n        emit DNSZoneCleared(node);\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == DNS_RECORD_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n\n    function setDNSRRSet(\n        bytes32 node,\n        bytes memory name,\n        uint16 resource,\n        bytes memory data,\n        uint256 offset,\n        uint256 size,\n        bool deleteRecord) private\n    {\n        uint256 version = versions[node];\n        bytes32 nameHash = keccak256(name);\n        bytes memory rrData = data.substring(offset, size);\n        if (deleteRecord) {\n            if (records[node][version][nameHash][resource].length != 0) {\n                nameEntriesCount[node][version][nameHash]--;\n            }\n            delete(records[node][version][nameHash][resource]);\n            emit DNSRecordDeleted(node, name, resource);\n        } else {\n            if (records[node][version][nameHash][resource].length == 0) {\n                nameEntriesCount[node][version][nameHash]++;\n            }\n            records[node][version][nameHash][resource] = rrData;\n            emit DNSRecordChanged(node, name, resource, rrData);\n        }\n    }\n}\n\n// File: contracts/profiles/InterfaceResolver.sol\n\npragma solidity ^0.5.0;\n\n\n\ncontract InterfaceResolver is ResolverBase, AddrResolver {\n    bytes4 constant private INTERFACE_INTERFACE_ID = bytes4(keccak256(\"interfaceImplementer(bytes32,bytes4)\"));\n    bytes4 private constant INTERFACE_META_ID = 0x01ffc9a7;\n\n    event InterfaceChanged(bytes32 indexed node, bytes4 indexed interfaceID, address implementer);\n\n    mapping(bytes32=>mapping(bytes4=>address)) interfaces;\n\n    /**\n     * Sets an interface associated with a name.\n     * Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support.\n     * @param node The node to update.\n     * @param interfaceID The EIP 168 interface ID.\n     * @param implementer The address of a contract that implements this interface for this node.\n     */\n    function setInterface(bytes32 node, bytes4 interfaceID, address implementer) external authorised(node) {\n        interfaces[node][interfaceID] = implementer;\n        emit InterfaceChanged(node, interfaceID, implementer);\n    }\n\n    /**\n     * Returns the address of a contract that implements the specified interface for this name.\n     * If an implementer has not been set for this interfaceID and name, the resolver will query\n     * the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that\n     * contract implements EIP168 and returns `true` for the specified interfaceID, its address\n     * will be returned.\n     * @param node The ENS node to query.\n     * @param interfaceID The EIP 168 interface ID to check for.\n     * @return The address that implements this interface, or 0 if the interface is unsupported.\n     */\n    function interfaceImplementer(bytes32 node, bytes4 interfaceID) external view returns (address) {\n        address implementer = interfaces[node][interfaceID];\n        if(implementer != address(0)) {\n            return implementer;\n        }\n\n        address a = addr(node);\n        if(a == address(0)) {\n            return address(0);\n        }\n\n        (bool success, bytes memory returnData) = a.staticcall(abi.encodeWithSignature(\"supportsInterface(bytes4)\", INTERFACE_META_ID));\n        if(!success || returnData.length < 32 || returnData[31] == 0) {\n            // EIP 168 not supported by target\n            return address(0);\n        }\n\n        (success, returnData) = a.staticcall(abi.encodeWithSignature(\"supportsInterface(bytes4)\", interfaceID));\n        if(!success || returnData.length < 32 || returnData[31] == 0) {\n            // Specified interface not supported by target\n            return address(0);\n        }\n\n        return a;\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == INTERFACE_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: contracts/profiles/NameResolver.sol\n\npragma solidity ^0.5.0;\n\n\ncontract NameResolver is ResolverBase {\n    bytes4 constant private NAME_INTERFACE_ID = 0x691f3431;\n\n    event NameChanged(bytes32 indexed node, string name);\n\n    mapping(bytes32=>string) names;\n\n    /**\n     * Sets the name associated with an ENS node, for reverse records.\n     * May only be called by the owner of that node in the ENS registry.\n     * @param node The node to update.\n     * @param name The name to set.\n     */\n    function setName(bytes32 node, string calldata name) external authorised(node) {\n        names[node] = name;\n        emit NameChanged(node, name);\n    }\n\n    /**\n     * Returns the name associated with an ENS node, for reverse records.\n     * Defined in EIP181.\n     * @param node The ENS node to query.\n     * @return The associated name.\n     */\n    function name(bytes32 node) external view returns (string memory) {\n        return names[node];\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == NAME_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: contracts/profiles/PubkeyResolver.sol\n\npragma solidity ^0.5.0;\n\n\ncontract PubkeyResolver is ResolverBase {\n    bytes4 constant private PUBKEY_INTERFACE_ID = 0xc8690233;\n\n    event PubkeyChanged(bytes32 indexed node, bytes32 x, bytes32 y);\n\n    struct PublicKey {\n        bytes32 x;\n        bytes32 y;\n    }\n\n    mapping(bytes32=>PublicKey) pubkeys;\n\n    /**\n     * Sets the SECP256k1 public key associated with an ENS node.\n     * @param node The ENS node to query\n     * @param x the X coordinate of the curve point for the public key.\n     * @param y the Y coordinate of the curve point for the public key.\n     */\n    function setPubkey(bytes32 node, bytes32 x, bytes32 y) external authorised(node) {\n        pubkeys[node] = PublicKey(x, y);\n        emit PubkeyChanged(node, x, y);\n    }\n\n    /**\n     * Returns the SECP256k1 public key associated with an ENS node.\n     * Defined in EIP 619.\n     * @param node The ENS node to query\n     * @return x, y the X and Y coordinates of the curve point for the public key.\n     */\n    function pubkey(bytes32 node) external view returns (bytes32 x, bytes32 y) {\n        return (pubkeys[node].x, pubkeys[node].y);\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == PUBKEY_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: contracts/profiles/TextResolver.sol\n\npragma solidity ^0.5.0;\n\n\ncontract TextResolver is ResolverBase {\n    bytes4 constant private TEXT_INTERFACE_ID = 0x59d1d43c;\n\n    event TextChanged(bytes32 indexed node, string indexed indexedKey, string key);\n\n    mapping(bytes32=>mapping(string=>string)) texts;\n\n    /**\n     * Sets the text data associated with an ENS node and key.\n     * May only be called by the owner of that node in the ENS registry.\n     * @param node The node to update.\n     * @param key The key to set.\n     * @param value The text data value to set.\n     */\n    function setText(bytes32 node, string calldata key, string calldata value) external authorised(node) {\n        texts[node][key] = value;\n        emit TextChanged(node, key, key);\n    }\n\n    /**\n     * Returns the text data associated with an ENS node and key.\n     * @param node The ENS node to query.\n     * @param key The text data key to query.\n     * @return The associated text data.\n     */\n    function text(bytes32 node, string calldata key) external view returns (string memory) {\n        return texts[node][key];\n    }\n\n    function supportsInterface(bytes4 interfaceID) public pure returns(bool) {\n        return interfaceID == TEXT_INTERFACE_ID || super.supportsInterface(interfaceID);\n    }\n}\n\n// File: contracts/PublicResolver.sol\n\npragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\n\n\n\n\n\n\n\n\n\n/**\n * A simple resolver anyone can use; only allows the owner of a node to set its\n * address.\n */\ncontract PublicResolver is ABIResolver, AddrResolver, ContentHashResolver, DNSResolver, InterfaceResolver, NameResolver, PubkeyResolver, TextResolver {\n    ENS ens;\n\n    /**\n     * A mapping of authorisations. An address that is authorised for a name\n     * may make any changes to the name that the owner could, but may not update\n     * the set of authorisations.\n     * (node, owner, caller) => isAuthorised\n     */\n    mapping(bytes32=>mapping(address=>mapping(address=>bool))) public authorisations;\n\n    event AuthorisationChanged(bytes32 indexed node, address indexed owner, address indexed target, bool isAuthorised);\n\n    constructor(ENS _ens) public {\n        ens = _ens;\n    }\n\n    /**\n     * @dev Sets or clears an authorisation.\n     * Authorisations are specific to the caller. Any account can set an authorisation\n     * for any name, but the authorisation that is checked will be that of the\n     * current owner of a name. Thus, transferring a name effectively clears any\n     * existing authorisations, and new authorisations can be set in advance of\n     * an ownership transfer if desired.\n     *\n     * @param node The name to change the authorisation on.\n     * @param target The address that is to be authorised or deauthorised.\n     * @param isAuthorised True if the address should be authorised, or false if it should be deauthorised.\n     */\n    function setAuthorisation(bytes32 node, address target, bool isAuthorised) external {\n        authorisations[node][msg.sender][target] = isAuthorised;\n        emit AuthorisationChanged(node, msg.sender, target, isAuthorised);\n    }\n\n    function isAuthorised(bytes32 node) internal view returns(bool) {\n        address owner = ens.owner(node);\n        return owner == msg.sender || authorisations[node][owner][msg.sender];\n    }\n\n    function multicall(bytes[] calldata data) external returns(bytes[] memory results) {\n        results = new bytes[](data.length);\n        for(uint i = 0; i < data.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n            require(success);\n            results[i] = result;\n        }\n        return results;\n    }\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "_ens",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "function",
            "name": "setABI",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "contentType",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setContenthash",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "hash",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setInterface",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "interfaceID",
                "type": "bytes4",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "implementer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "contenthash",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setAddr",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "a",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setText",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "key",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "value",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "clearDNSZone",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setName",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "name",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "text",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "key",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "interfaceImplementer",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "interfaceID",
                "type": "bytes4",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setDNSRecords",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setAuthorisation",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "isAuthorised",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "dnsRecord",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "name",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "resource",
                "type": "uint16",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "supportsInterface",
            "constant": true,
            "anonymous": false,
            "stateMutability": "pure",
            "inputs": [
              {
                "name": "interfaceID",
                "type": "bytes4",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "pubkey",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "x",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "y",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "addr",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "coinType",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "name",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "addr",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "multicall",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "data",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              }
            ],
            "outputs": [
              {
                "name": "results",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "setPubkey",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "x",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "y",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setAddr",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "coinType",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "a",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "ABI",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "contentTypes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "authorisations",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "hasDNSRecords",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "name",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "event",
            "name": "AddressChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "coinType",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newAddress",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "DNSRecordChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "name",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "resource",
                "type": "uint16",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "record",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "DNSZoneCleared",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "TextChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "indexedKey",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "key",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "AddrChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "a",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "InterfaceChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "interfaceID",
                "type": "bytes4",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "implementer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NameChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "name",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "PubkeyChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "x",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "y",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "AuthorisationChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "owner",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "isAuthorised",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ContenthashChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "hash",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ABIChanged",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "contentType",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "DNSRecordDeleted",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "node",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "name",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "resource",
                "type": "uint16",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": [
          {
            "inputs": [
              {
                "internalType": "contract ENS",
                "name": "_ens",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "contentType",
                "type": "uint256"
              }
            ],
            "name": "ABIChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "a",
                "type": "address"
              }
            ],
            "name": "AddrChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "coinType",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "newAddress",
                "type": "bytes"
              }
            ],
            "name": "AddressChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "isAuthorised",
                "type": "bool"
              }
            ],
            "name": "AuthorisationChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "hash",
                "type": "bytes"
              }
            ],
            "name": "ContenthashChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "name",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint16",
                "name": "resource",
                "type": "uint16"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "record",
                "type": "bytes"
              }
            ],
            "name": "DNSRecordChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "name",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint16",
                "name": "resource",
                "type": "uint16"
              }
            ],
            "name": "DNSRecordDeleted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "DNSZoneCleared",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "implementer",
                "type": "address"
              }
            ],
            "name": "InterfaceChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "name": "NameChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes32",
                "name": "x",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes32",
                "name": "y",
                "type": "bytes32"
              }
            ],
            "name": "PubkeyChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "string",
                "name": "indexedKey",
                "type": "string"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "key",
                "type": "string"
              }
            ],
            "name": "TextChanged",
            "type": "event"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "contentTypes",
                "type": "uint256"
              }
            ],
            "name": "ABI",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "addr",
            "outputs": [
              {
                "internalType": "address payable",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "coinType",
                "type": "uint256"
              }
            ],
            "name": "addr",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "authorisations",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "clearDNSZone",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "contenthash",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "name",
                "type": "bytes32"
              },
              {
                "internalType": "uint16",
                "name": "resource",
                "type": "uint16"
              }
            ],
            "name": "dnsRecord",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "name",
                "type": "bytes32"
              }
            ],
            "name": "hasDNSRecords",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "interfaceImplementer",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes[]",
                "name": "data",
                "type": "bytes[]"
              }
            ],
            "name": "multicall",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "results",
                "type": "bytes[]"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              }
            ],
            "name": "pubkey",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "x",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "y",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "contentType",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "setABI",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "coinType",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "a",
                "type": "bytes"
              }
            ],
            "name": "setAddr",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "a",
                "type": "address"
              }
            ],
            "name": "setAddr",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isAuthorised",
                "type": "bool"
              }
            ],
            "name": "setAuthorisation",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "hash",
                "type": "bytes"
              }
            ],
            "name": "setContenthash",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "setDNSRecords",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "implementer",
                "type": "address"
              }
            ],
            "name": "setInterface",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "name": "setName",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "x",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "y",
                "type": "bytes32"
              }
            ],
            "name": "setPubkey",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "string",
                "name": "key",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "value",
                "type": "string"
              }
            ],
            "name": "setText",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceID",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "node",
                "type": "bytes32"
              },
              {
                "internalType": "string",
                "name": "key",
                "type": "string"
              }
            ],
            "name": "text",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "states": [
          {
            "name": "interfaces",
            "type": "mapping (bytes32 => mapping (bytes4 => address))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false
          },
          {
            "name": "pubkeys",
            "type": "mapping (bytes32 => tuple)",
            "storage_location": "memory",
            "components": [
              {
                "name": "x",
                "type": "bytes32",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "y",
                "type": "bytes32",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
            "indexed": false
          },
          {
            "name": "_addresses",
            "type": "mapping (bytes32 => mapping (uint256 => bytes))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false
          },
          {
            "name": "ens",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "authorisations",
            "type": "mapping (bytes32 => mapping (address => mapping (address => bool)))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
            "indexed": false
          },
          {
            "name": "texts",
            "type": "mapping (bytes32 => mapping (string => string))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
            "indexed": false
          },
          {
            "name": "hashes",
            "type": "mapping (bytes32 => bytes)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false
          },
          {
            "name": "abis",
            "type": "mapping (bytes32 => mapping (uint256 => bytes))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false
          },
          {
            "name": "versions",
            "type": "mapping (bytes32 => uint256)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false
          },
          {
            "name": "records",
            "type": "mapping (bytes32 => mapping (uint256 => mapping (bytes32 => mapping (uint16 => bytes))))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false
          },
          {
            "name": "nameEntriesCount",
            "type": "mapping (bytes32 => mapping (uint256 => mapping (bytes32 => uint16)))",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false
          },
          {
            "name": "names",
            "type": "mapping (bytes32 => string)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2020-04-16T00:22:58Z",
      "language": "solidity",
      "in_project": false
    },
    {
      "id": "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "contract_id": "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x53a328F4086d7C0F1Fa19e594c9b842125263026",
      "contract_name": "GovernorBravoDelegate",
      "ens_domain": null,
      "type": "contract",
      "evm_version": "",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": true,
      "optimization_runs": 200,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "contracts/GovernorBravoDelegate.sol",
            "name": "GovernorBravoDelegate.sol",
            "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"./GovernorBravoInterfaces.sol\";\n\ncontract GovernorBravoDelegate is GovernorBravoDelegateStorageV1, GovernorBravoEvents {\n\n    /// @notice The name of this contract\n    string public constant name = \"Uniswap Governor Bravo\";\n\n    /// @notice The minimum setable proposal threshold\n    uint public constant MIN_PROPOSAL_THRESHOLD = 1000000e18; // 1,000,000 Uni\n\n    /// @notice The maximum setable proposal threshold\n    uint public constant MAX_PROPOSAL_THRESHOLD = 10000000e18; //10,000,000 Uni\n\n    /// @notice The minimum setable voting period\n    uint public constant MIN_VOTING_PERIOD = 5760; // About 24 hours\n\n    /// @notice The max setable voting period\n    uint public constant MAX_VOTING_PERIOD = 80640; // About 2 weeks\n\n    /// @notice The min setable voting delay\n    uint public constant MIN_VOTING_DELAY = 1;\n\n    /// @notice The max setable voting delay\n    uint public constant MAX_VOTING_DELAY = 40320; // About 1 week\n\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\n    uint public constant quorumVotes = 40000000e18; // 40,000,000 = 4% of Uni\n\n    /// @notice The maximum number of actions that can be included in a proposal\n    uint public constant proposalMaxOperations = 10; // 10 actions\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\"Ballot(uint256 proposalId,uint8 support)\");\n\n    /**\n      * @notice Used to initialize the contract during delegator contructor\n      * @param timelock_ The address of the Timelock\n      * @param uni_ The address of the Uni token\n      * @param votingPeriod_ The initial voting period\n      * @param votingDelay_ The initial voting delay\n      * @param proposalThreshold_ The initial proposal threshold\n      */\n    function initialize(address timelock_, address uni_, uint votingPeriod_, uint votingDelay_, uint proposalThreshold_) public {\n        require(address(timelock) == address(0), \"GovernorBravo::initialize: can only initialize once\");\n        require(msg.sender == admin, \"GovernorBravo::initialize: admin only\");\n        require(timelock_ != address(0), \"GovernorBravo::initialize: invalid timelock address\");\n        require(uni_ != address(0), \"GovernorBravo::initialize: invalid uni address\");\n        require(votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD, \"GovernorBravo::initialize: invalid voting period\");\n        require(votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY, \"GovernorBravo::initialize: invalid voting delay\");\n        require(proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD && proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD, \"GovernorBravo::initialize: invalid proposal threshold\");\n\n        timelock = TimelockInterface(timelock_);\n        uni = UniInterface(uni_);\n        votingPeriod = votingPeriod_;\n        votingDelay = votingDelay_;\n        proposalThreshold = proposalThreshold_;\n    }\n\n    /**\n      * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\n      * @param targets Target addresses for proposal calls\n      * @param values Eth values for proposal calls\n      * @param signatures Function signatures for proposal calls\n      * @param calldatas Calldatas for proposal calls\n      * @param description String description of the proposal\n      * @return Proposal id of new proposal\n      */\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\n        // Reject proposals before initiating as Governor\n        require(initialProposalId != 0, \"GovernorBravo::propose: Governor Bravo not active\");\n        require(uni.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold, \"GovernorBravo::propose: proposer votes below proposal threshold\");\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \"GovernorBravo::propose: proposal function information arity mismatch\");\n        require(targets.length != 0, \"GovernorBravo::propose: must provide actions\");\n        require(targets.length <= proposalMaxOperations, \"GovernorBravo::propose: too many actions\");\n\n        uint latestProposalId = latestProposalIds[msg.sender];\n        if (latestProposalId != 0) {\n          ProposalState proposersLatestProposalState = state(latestProposalId);\n          require(proposersLatestProposalState != ProposalState.Active, \"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\");\n          require(proposersLatestProposalState != ProposalState.Pending, \"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\");\n        }\n\n        uint startBlock = add256(block.number, votingDelay);\n        uint endBlock = add256(startBlock, votingPeriod);\n\n        proposalCount++;\n        Proposal memory newProposal = Proposal({\n            id: proposalCount,\n            proposer: msg.sender,\n            eta: 0,\n            targets: targets,\n            values: values,\n            signatures: signatures,\n            calldatas: calldatas,\n            startBlock: startBlock,\n            endBlock: endBlock,\n            forVotes: 0,\n            againstVotes: 0,\n            abstainVotes: 0,\n            canceled: false,\n            executed: false\n        });\n\n        proposals[newProposal.id] = newProposal;\n        latestProposalIds[newProposal.proposer] = newProposal.id;\n\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\n        return newProposal.id;\n    }\n\n    /**\n      * @notice Queues a proposal of state succeeded\n      * @param proposalId The id of the proposal to queue\n      */\n    function queue(uint proposalId) external {\n        require(state(proposalId) == ProposalState.Succeeded, \"GovernorBravo::queue: proposal can only be queued if it is succeeded\");\n        Proposal storage proposal = proposals[proposalId];\n        uint eta = add256(block.timestamp, timelock.delay());\n        for (uint i = 0; i < proposal.targets.length; i++) {\n            queueOrRevertInternal(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\n        }\n        proposal.eta = eta;\n        emit ProposalQueued(proposalId, eta);\n    }\n\n    function queueOrRevertInternal(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\");\n        timelock.queueTransaction(target, value, signature, data, eta);\n    }\n\n    /**\n      * @notice Executes a queued proposal if eta has passed\n      * @param proposalId The id of the proposal to execute\n      */\n    function execute(uint proposalId) external payable {\n        require(state(proposalId) == ProposalState.Queued, \"GovernorBravo::execute: proposal can only be executed if it is queued\");\n        Proposal storage proposal = proposals[proposalId];\n        proposal.executed = true;\n        for (uint i = 0; i < proposal.targets.length; i++) {\n            timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\n        }\n        emit ProposalExecuted(proposalId);\n    }\n\n    /**\n      * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\n      * @param proposalId The id of the proposal to cancel\n      */\n    function cancel(uint proposalId) external {\n        require(state(proposalId) != ProposalState.Executed, \"GovernorBravo::cancel: cannot cancel executed proposal\");\n\n        Proposal storage proposal = proposals[proposalId];\n        require(msg.sender == proposal.proposer || uni.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold, \"GovernorBravo::cancel: proposer above threshold\");\n\n        proposal.canceled = true;\n        for (uint i = 0; i < proposal.targets.length; i++) {\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\n        }\n\n        emit ProposalCanceled(proposalId);\n    }\n\n    /**\n      * @notice Gets actions of a proposal\n      * @param proposalId the id of the proposal\n      * @return Targets, values, signatures, and calldatas of the proposal actions\n      */\n    function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\n        Proposal storage p = proposals[proposalId];\n        return (p.targets, p.values, p.signatures, p.calldatas);\n    }\n\n    /**\n      * @notice Gets the receipt for a voter on a given proposal\n      * @param proposalId the id of proposal\n      * @param voter The address of the voter\n      * @return The voting receipt\n      */\n    function getReceipt(uint proposalId, address voter) external view returns (Receipt memory) {\n        return proposals[proposalId].receipts[voter];\n    }\n\n    /**\n      * @notice Gets the state of a proposal\n      * @param proposalId The id of the proposal\n      * @return Proposal state\n      */\n    function state(uint proposalId) public view returns (ProposalState) {\n        require(proposalCount >= proposalId && proposalId > initialProposalId, \"GovernorBravo::state: invalid proposal id\");\n        Proposal storage proposal = proposals[proposalId];\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        } else if (block.number <= proposal.startBlock) {\n            return ProposalState.Pending;\n        } else if (block.number <= proposal.endBlock) {\n            return ProposalState.Active;\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\n            return ProposalState.Defeated;\n        } else if (proposal.eta == 0) {\n            return ProposalState.Succeeded;\n        } else if (proposal.executed) {\n            return ProposalState.Executed;\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\n            return ProposalState.Expired;\n        } else {\n            return ProposalState.Queued;\n        }\n    }\n\n    /**\n      * @notice Cast a vote for a proposal\n      * @param proposalId The id of the proposal to vote on\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\n      */\n    function castVote(uint proposalId, uint8 support) external {\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \"\");\n    }\n\n    /**\n      * @notice Cast a vote for a proposal with a reason\n      * @param proposalId The id of the proposal to vote on\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\n      * @param reason The reason given for the vote by the voter\n      */\n    function castVoteWithReason(uint proposalId, uint8 support, string calldata reason) external {\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\n    }\n\n    /**\n      * @notice Cast a vote for a proposal by signature\n      * @dev External function that accepts EIP-712 signatures for voting on proposals.\n      */\n    function castVoteBySig(uint proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) external {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"GovernorBravo::castVoteBySig: invalid signature\");\n        emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \"\");\n    }\n\n    /**\n      * @notice Internal function that caries out voting logic\n      * @param voter The voter that is casting their vote\n      * @param proposalId The id of the proposal to vote on\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\n      * @return The number of votes cast\n      */\n    function castVoteInternal(address voter, uint proposalId, uint8 support) internal returns (uint96) {\n        require(state(proposalId) == ProposalState.Active, \"GovernorBravo::castVoteInternal: voting is closed\");\n        require(support <= 2, \"GovernorBravo::castVoteInternal: invalid vote type\");\n        Proposal storage proposal = proposals[proposalId];\n        Receipt storage receipt = proposal.receipts[voter];\n        require(receipt.hasVoted == false, \"GovernorBravo::castVoteInternal: voter already voted\");\n        uint96 votes = uni.getPriorVotes(voter, proposal.startBlock);\n\n        if (support == 0) {\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\n        } else if (support == 1) {\n            proposal.forVotes = add256(proposal.forVotes, votes);\n        } else if (support == 2) {\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\n        }\n\n        receipt.hasVoted = true;\n        receipt.support = support;\n        receipt.votes = votes;\n\n        return votes;\n    }\n\n    /**\n      * @notice Admin function for setting the voting delay\n      * @param newVotingDelay new voting delay, in blocks\n      */\n    function _setVotingDelay(uint newVotingDelay) external {\n        require(msg.sender == admin, \"GovernorBravo::_setVotingDelay: admin only\");\n        require(newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY, \"GovernorBravo::_setVotingDelay: invalid voting delay\");\n        uint oldVotingDelay = votingDelay;\n        votingDelay = newVotingDelay;\n\n        emit VotingDelaySet(oldVotingDelay,votingDelay);\n    }\n\n    /**\n      * @notice Admin function for setting the voting period\n      * @param newVotingPeriod new voting period, in blocks\n      */\n    function _setVotingPeriod(uint newVotingPeriod) external {\n        require(msg.sender == admin, \"GovernorBravo::_setVotingPeriod: admin only\");\n        require(newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD, \"GovernorBravo::_setVotingPeriod: invalid voting period\");\n        uint oldVotingPeriod = votingPeriod;\n        votingPeriod = newVotingPeriod;\n\n        emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\n    }\n\n    /**\n      * @notice Admin function for setting the proposal threshold\n      * @dev newProposalThreshold must be greater than the hardcoded min\n      * @param newProposalThreshold new proposal threshold\n      */\n    function _setProposalThreshold(uint newProposalThreshold) external {\n        require(msg.sender == admin, \"GovernorBravo::_setProposalThreshold: admin only\");\n        require(newProposalThreshold >= MIN_PROPOSAL_THRESHOLD && newProposalThreshold <= MAX_PROPOSAL_THRESHOLD, \"GovernorBravo::_setProposalThreshold: invalid proposal threshold\");\n        uint oldProposalThreshold = proposalThreshold;\n        proposalThreshold = newProposalThreshold;\n\n        emit ProposalThresholdSet(oldProposalThreshold, proposalThreshold);\n    }\n\n    /**\n      * @notice Initiate the GovernorBravo contract\n      * @dev Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\n      * @param proposalCount proposal id to initialize from\n      */\n    function _initiate(uint proposalCount) external {\n        require(msg.sender == admin, \"GovernorBravo::_initiate: admin only\");\n        require(initialProposalId == 0, \"GovernorBravo::_initiate: can only initiate once\");\n        initialProposalId = proposalCount;\n        timelock.acceptAdmin();\n    }\n\n    /**\n      * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\n      * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\n      * @param newPendingAdmin New pending admin.\n      */\n    function _setPendingAdmin(address newPendingAdmin) external {\n        // Check caller = admin\n        require(msg.sender == admin, \"GovernorBravo:_setPendingAdmin: admin only\");\n\n        // Save current value, if any, for inclusion in log\n        address oldPendingAdmin = pendingAdmin;\n\n        // Store pendingAdmin with value newPendingAdmin\n        pendingAdmin = newPendingAdmin;\n\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\n    }\n\n    /**\n      * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\n      * @dev Admin function for pending admin to accept role and update admin\n      */\n    function _acceptAdmin() external {\n        // Check caller is pendingAdmin and pendingAdmin ≠ address(0)\n        require(msg.sender == pendingAdmin && msg.sender != address(0), \"GovernorBravo:_acceptAdmin: pending admin only\");\n\n        // Save current values for inclusion in log\n        address oldAdmin = admin;\n        address oldPendingAdmin = pendingAdmin;\n\n        // Store admin with value pendingAdmin\n        admin = pendingAdmin;\n\n        // Clear the pending value\n        pendingAdmin = address(0);\n\n        emit NewAdmin(oldAdmin, admin);\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\n    }\n\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\n        uint c = a + b;\n        require(c >= a, \"addition overflow\");\n        return c;\n    }\n\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\n        require(b <= a, \"subtraction underflow\");\n        return a - b;\n    }\n\n    function getChainIdInternal() internal pure returns (uint) {\n        uint chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}"
          },
          {
            "id": 1,
            "path": "contracts/GovernorBravoInterfaces.sol",
            "name": "GovernorBravoInterfaces.sol",
            "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\n\ncontract GovernorBravoEvents {\n    /// @notice An event emitted when a new proposal is created\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\n\n    /// @notice An event emitted when a vote has been cast on a proposal\n    /// @param voter The address which casted a vote\n    /// @param proposalId The proposal id which was voted on\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\n    /// @param votes Number of votes which were cast by the voter\n    /// @param reason The reason given for the vote by the voter\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\n\n    /// @notice An event emitted when a proposal has been canceled\n    event ProposalCanceled(uint id);\n\n    /// @notice An event emitted when a proposal has been queued in the Timelock\n    event ProposalQueued(uint id, uint eta);\n\n    /// @notice An event emitted when a proposal has been executed in the Timelock\n    event ProposalExecuted(uint id);\n\n    /// @notice An event emitted when the voting delay is set\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\n\n    /// @notice An event emitted when the voting period is set\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\n\n    /// @notice Emitted when implementation is changed\n    event NewImplementation(address oldImplementation, address newImplementation);\n\n    /// @notice Emitted when proposal threshold is set\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\n\n    /// @notice Emitted when pendingAdmin is changed\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\n\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\n    event NewAdmin(address oldAdmin, address newAdmin);\n}\n\ncontract GovernorBravoDelegatorStorage {\n    /// @notice Administrator for this contract\n    address public admin;\n\n    /// @notice Pending administrator for this contract\n    address public pendingAdmin;\n\n    /// @notice Active brains of Governor\n    address public implementation;\n}\n\n\n/**\n * @title Storage for Governor Bravo Delegate\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\n * GovernorBravoDelegateStorageVX.\n */\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\n\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\n    uint public votingDelay;\n\n    /// @notice The duration of voting on a proposal, in blocks\n    uint public votingPeriod;\n\n    /// @notice The number of votes required in order for a voter to become a proposer\n    uint public proposalThreshold;\n\n    /// @notice Initial proposal id set at become\n    uint public initialProposalId;\n\n    /// @notice The total number of proposals\n    uint public proposalCount;\n\n    /// @notice The address of the Uniswap Protocol Timelock\n    TimelockInterface public timelock;\n\n    /// @notice The address of the Uniswap governance token\n    UniInterface public uni;\n\n    /// @notice The official record of all proposals ever proposed\n    mapping (uint => Proposal) public proposals;\n\n    /// @notice The latest proposal for each proposer\n    mapping (address => uint) public latestProposalIds;\n\n\n    struct Proposal {\n        /// @notice Unique id for looking up a proposal\n        uint id;\n\n        /// @notice Creator of the proposal\n        address proposer;\n\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\n        uint eta;\n\n        /// @notice the ordered list of target addresses for calls to be made\n        address[] targets;\n\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\n        uint[] values;\n\n        /// @notice The ordered list of function signatures to be called\n        string[] signatures;\n\n        /// @notice The ordered list of calldata to be passed to each call\n        bytes[] calldatas;\n\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\n        uint startBlock;\n\n        /// @notice The block at which voting ends: votes must be cast prior to this block\n        uint endBlock;\n\n        /// @notice Current number of votes in favor of this proposal\n        uint forVotes;\n\n        /// @notice Current number of votes in opposition to this proposal\n        uint againstVotes;\n\n        /// @notice Current number of votes for abstaining for this proposal\n        uint abstainVotes;\n\n        /// @notice Flag marking whether the proposal has been canceled\n        bool canceled;\n\n        /// @notice Flag marking whether the proposal has been executed\n        bool executed;\n\n        /// @notice Receipts of ballots for the entire set of voters\n        mapping (address => Receipt) receipts;\n    }\n\n    /// @notice Ballot receipt record for a voter\n    struct Receipt {\n        /// @notice Whether or not a vote has been cast\n        bool hasVoted;\n\n        /// @notice Whether or not the voter supports the proposal or abstains\n        uint8 support;\n\n        /// @notice The number of votes the voter had, which were cast\n        uint96 votes;\n    }\n\n    /// @notice Possible states that a proposal may be in\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n}\n\ninterface TimelockInterface {\n    function delay() external view returns (uint);\n    function GRACE_PERIOD() external view returns (uint);\n    function acceptAdmin() external;\n    function queuedTransactions(bytes32 hash) external view returns (bool);\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\n}\n\ninterface UniInterface {\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\n}\n\ninterface GovernorAlpha {\n    /// @notice The total number of proposals\n    function proposalCount() external returns (uint);\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": null,
            "outputs": null
          },
          {
            "type": "function",
            "name": "initialize",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "timelock_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "uni_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "votingPeriod_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votingDelay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposalThreshold_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "castVoteBySig",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "v",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "r",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "s",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "votingDelay",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_PROPOSAL_THRESHOLD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "queue",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "name",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "castVote",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "admin",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "votingPeriod",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "timelock",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "castVoteWithReason",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "proposalThreshold",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "quorumVotes",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_VOTING_DELAY",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "execute",
            "constant": false,
            "anonymous": false,
            "stateMutability": "payable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "proposalMaxOperations",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "latestProposalIds",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "getActions",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposalCount",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "implementation",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposals",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_initiate",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalCount",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "MIN_VOTING_DELAY",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_acceptAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [],
            "outputs": []
          },
          {
            "type": "function",
            "name": "_setVotingPeriod",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "_setPendingAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "MIN_PROPOSAL_THRESHOLD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "getReceipt",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "storage_location": "default",
                "components": [
                  {
                    "name": "hasVoted",
                    "type": "bool",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "bool"
                    }
                  },
                  {
                    "name": "support",
                    "type": "uint8",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  },
                  {
                    "name": "votes",
                    "type": "uint96",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  }
                ],
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false
              }
            ]
          },
          {
            "type": "function",
            "name": "MIN_VOTING_PERIOD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "BALLOT_TYPEHASH",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "propose",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setProposalThreshold",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "state",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "cancel",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "DOMAIN_TYPEHASH",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_VOTING_PERIOD",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setVotingDelay",
            "constant": false,
            "anonymous": false,
            "stateMutability": "nonpayable",
            "inputs": [
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "uni",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "initialProposalId",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "pendingAdmin",
            "constant": true,
            "anonymous": false,
            "stateMutability": "view",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "event",
            "name": "ProposalThresholdSet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewImplementation",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingPeriodSet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewPendingAdmin",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCanceled",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalQueued",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VoteCast",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingDelaySet",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "oldVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCreated",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalExecuted",
            "constant": false,
            "anonymous": false,
            "stateMutability": "",
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "oldAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "NewAdmin",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "oldImplementation",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newImplementation",
                "type": "address"
              }
            ],
            "name": "NewImplementation",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "oldPendingAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newPendingAdmin",
                "type": "address"
              }
            ],
            "name": "NewPendingAdmin",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ProposalCanceled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "proposer",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address[]",
                "name": "targets",
                "type": "address[]"
              },
              {
                "indexed": false,
                "internalType": "uint256[]",
                "name": "values",
                "type": "uint256[]"
              },
              {
                "indexed": false,
                "internalType": "string[]",
                "name": "signatures",
                "type": "string[]"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "calldatas",
                "type": "bytes[]"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "startBlock",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "endBlock",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "description",
                "type": "string"
              }
            ],
            "name": "ProposalCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ProposalExecuted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              }
            ],
            "name": "ProposalQueued",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldProposalThreshold",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newProposalThreshold",
                "type": "uint256"
              }
            ],
            "name": "ProposalThresholdSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "voter",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "support",
                "type": "uint8"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "votes",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "reason",
                "type": "string"
              }
            ],
            "name": "VoteCast",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldVotingDelay",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newVotingDelay",
                "type": "uint256"
              }
            ],
            "name": "VotingDelaySet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldVotingPeriod",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newVotingPeriod",
                "type": "uint256"
              }
            ],
            "name": "VotingPeriodSet",
            "type": "event"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "BALLOT_TYPEHASH",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "DOMAIN_TYPEHASH",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAX_PROPOSAL_THRESHOLD",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAX_VOTING_DELAY",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MAX_VOTING_PERIOD",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MIN_PROPOSAL_THRESHOLD",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MIN_VOTING_DELAY",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "MIN_VOTING_PERIOD",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "_acceptAdmin",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalCount",
                "type": "uint256"
              }
            ],
            "name": "_initiate",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "newPendingAdmin",
                "type": "address"
              }
            ],
            "name": "_setPendingAdmin",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "newProposalThreshold",
                "type": "uint256"
              }
            ],
            "name": "_setProposalThreshold",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "newVotingDelay",
                "type": "uint256"
              }
            ],
            "name": "_setVotingDelay",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "newVotingPeriod",
                "type": "uint256"
              }
            ],
            "name": "_setVotingPeriod",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "admin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              }
            ],
            "name": "cancel",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "support",
                "type": "uint8"
              }
            ],
            "name": "castVote",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "support",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "v",
                "type": "uint8"
              },
              {
                "internalType": "bytes32",
                "name": "r",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "name": "castVoteBySig",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "support",
                "type": "uint8"
              },
              {
                "internalType": "string",
                "name": "reason",
                "type": "string"
              }
            ],
            "name": "castVoteWithReason",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              }
            ],
            "name": "execute",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              }
            ],
            "name": "getActions",
            "outputs": [
              {
                "internalType": "address[]",
                "name": "targets",
                "type": "address[]"
              },
              {
                "internalType": "uint256[]",
                "name": "values",
                "type": "uint256[]"
              },
              {
                "internalType": "string[]",
                "name": "signatures",
                "type": "string[]"
              },
              {
                "internalType": "bytes[]",
                "name": "calldatas",
                "type": "bytes[]"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "voter",
                "type": "address"
              }
            ],
            "name": "getReceipt",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "bool",
                    "name": "hasVoted",
                    "type": "bool"
                  },
                  {
                    "internalType": "uint8",
                    "name": "support",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint96",
                    "name": "votes",
                    "type": "uint96"
                  }
                ],
                "internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
                "name": "",
                "type": "tuple"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "initialProposalId",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address",
                "name": "timelock_",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "uni_",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "votingPeriod_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "votingDelay_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "proposalThreshold_",
                "type": "uint256"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "latestProposalIds",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "pendingAdmin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "proposalCount",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "proposalMaxOperations",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "proposalThreshold",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "proposals",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "proposer",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "eta",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "startBlock",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "endBlock",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "forVotes",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "againstVotes",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "abstainVotes",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "canceled",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "executed",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "address[]",
                "name": "targets",
                "type": "address[]"
              },
              {
                "internalType": "uint256[]",
                "name": "values",
                "type": "uint256[]"
              },
              {
                "internalType": "string[]",
                "name": "signatures",
                "type": "string[]"
              },
              {
                "internalType": "bytes[]",
                "name": "calldatas",
                "type": "bytes[]"
              },
              {
                "internalType": "string",
                "name": "description",
                "type": "string"
              }
            ],
            "name": "propose",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              }
            ],
            "name": "queue",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "quorumVotes",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "internalType": "uint256",
                "name": "proposalId",
                "type": "uint256"
              }
            ],
            "name": "state",
            "outputs": [
              {
                "internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "timelock",
            "outputs": [
              {
                "internalType": "contract TimelockInterface",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "uni",
            "outputs": [
              {
                "internalType": "contract UniInterface",
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "votingDelay",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "votingPeriod",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "states": [
          {
            "name": "implementation",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "votingPeriod",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "proposalCount",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "timelock",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "uni",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "latestProposalIds",
            "type": "mapping (address => uint256)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
            "indexed": false
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "votingDelay",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "proposalThreshold",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "initialProposalId",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "proposals",
            "type": "mapping (uint256 => tuple)",
            "storage_location": "memory",
            "components": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b512",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b513",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b514",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b515",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b516",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b517",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b518",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b519",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51a",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51b",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51c",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51d",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 8,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "receipts",
                "type": "mapping (address => tuple)",
                "storage_location": "memory",
                "components": [
                  {
                    "name": "hasVoted",
                    "type": "bool",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "bool"
                    }
                  },
                  {
                    "name": "support",
                    "type": "uint8",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 8,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  },
                  {
                    "name": "votes",
                    "type": "uint96",
                    "storage_location": "memory",
                    "components": null,
                    "offset": 16,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  }
                ],
                "offset": 0,
                "index": "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51f",
                "indexed": false
              }
            ],
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
            "indexed": false
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2021-08-20T00:59:45Z",
      "language": "solidity",
      "in_project": false
    }
  ],
  "generated_access_list": [
    {
      "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073"
    },
    {
      "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "storage_keys": [
        "0x92f03df768b1863908f02ce1dd4918cb306d8f801c994add2c35d3cce36407c1",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    {
      "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "storage_keys": [
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf34",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b512",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3c",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b518",
        "0x0000000000000000000000000000000000000000000000000000000000000007",
        "0x0000000000000000000000000000000000000000000000000000000000000002",
        "0x44cc7e5fd86667e6238d94c3335b7fc783ea62bdca2c161cc616decf273ea351",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b515",
        "0x54c4447c3feb299ac190a51963a268f7c88a9dd6eecf90a7829047b062ffd412",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b517",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51c",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf35",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51e",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b514",
        "0x0000000000000000000000000000000000000000000000000000000000000008",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3a",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b513",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf36",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3d",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b516",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51b",
        "0x0000000000000000000000000000000000000000000000000000000000000006",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf37",
        "0xce9226c02fb21c47f5a6206abac377c7847cab2e74c43c760ae85e7b5452cfdd",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf39",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf38",
        "0x27c3ef9de67ffa23958f3ac8120600800af4ceb37a8b0ab15bf1866f1e6186f8",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51d",
        "0x3dadf9a6164a1de4ea351de467648173ba6f7dd21807afee5d4e5e13989eaf3b",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b51a",
        "0x7c88ef8d7aca0318251f31c899c30b491c6eaeb9e0abc596bf1f7fc86a58b519"
      ]
    },
    {
      "address": "0x53a328f4086d7c0f1fa19e594c9b842125263026"
    },
    {
      "address": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
      "storage_keys": [
        "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e28a",
        "0x000000000000000000000000000000000000000000000000000000000000000a",
        "0x1976d2bf91d1fe9c6239e886fffe6414734c791d2f4378ba4be95d96798fde94",
        "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e288",
        "0x401ad50894012597d0b7bd71ba20ee7dda4635b57480652ee65815011e31e289"
      ]
    },
    {
      "address": "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
      "storage_keys": [
        "0x24b042c6b915eec54e1f40e020b38664a359a45e170e73dda6e7b1a3e4560320"
      ]
    }
  ]
}